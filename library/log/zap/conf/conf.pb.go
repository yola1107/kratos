// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: conf/conf/conf.proto

package conf

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MODE int32

const (
	MODE_DEV  MODE = 0
	MODE_PROD MODE = 1
)

// Enum value maps for MODE.
var (
	MODE_name = map[int32]string{
		0: "DEV",
		1: "PROD",
	}
	MODE_value = map[string]int32{
		"DEV":  0,
		"PROD": 1,
	}
)

func (x MODE) Enum() *MODE {
	p := new(MODE)
	*p = x
	return p
}

func (x MODE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MODE) Descriptor() protoreflect.EnumDescriptor {
	return file_conf_conf_conf_proto_enumTypes[0].Descriptor()
}

func (MODE) Type() protoreflect.EnumType {
	return &file_conf_conf_conf_proto_enumTypes[0]
}

func (x MODE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MODE.Descriptor instead.
func (MODE) EnumDescriptor() ([]byte, []int) {
	return file_conf_conf_conf_proto_rawDescGZIP(), []int{0}
}

type Bootstrap struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 日志配置
	Log           *Log `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	mi := &file_conf_conf_conf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_conf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_conf_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetLog() *Log {
	if x != nil {
		return x.Log
	}
	return nil
}

type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logger        *Logger                `protobuf:"bytes,1,opt,name=logger,proto3" json:"logger,omitempty"`
	Alerter       *Alerter               `protobuf:"bytes,2,opt,name=alerter,proto3" json:"alerter,omitempty"`
	Telegram      *Telegram              `protobuf:"bytes,3,opt,name=telegram,proto3" json:"telegram,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_conf_conf_conf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_conf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_conf_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *Log) GetLogger() *Logger {
	if x != nil {
		return x.Logger
	}
	return nil
}

func (x *Log) GetAlerter() *Alerter {
	if x != nil {
		return x.Alerter
	}
	return nil
}

func (x *Log) GetTelegram() *Telegram {
	if x != nil {
		return x.Telegram
	}
	return nil
}

type Logger struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 0:dev 1:prod
	Mode MODE `protobuf:"varint,1,opt,name=mode,proto3,enum=kratos.api.MODE" json:"mode,omitempty"`
	// 应用名称
	AppName string `protobuf:"bytes,2,opt,name=appName,proto3" json:"appName,omitempty"`
	// 日志级别 "debug", "info", "warn", "error"
	Level string `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`
	// 日志输出目录路径
	Directory string `protobuf:"bytes,4,opt,name=directory,proto3" json:"directory,omitempty"`
	// 输出格式 文件是否按json格式输出
	FormatJson bool `protobuf:"varint,5,opt,name=formatJson,proto3" json:"formatJson,omitempty"`
	// 是否开启记录 error+ 日志文件
	ErrorFile bool `protobuf:"varint,6,opt,name=errorFile,proto3" json:"errorFile,omitempty"`
	// 敏感词（如 password、token）
	Sensitive []string `protobuf:"bytes,7,rep,name=sensitive,proto3" json:"sensitive,omitempty"`
	// Rotate日志轮转控制配置
	Rotate        *Rotate `protobuf:"bytes,8,opt,name=rotate,proto3" json:"rotate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logger) Reset() {
	*x = Logger{}
	mi := &file_conf_conf_conf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logger) ProtoMessage() {}

func (x *Logger) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_conf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logger.ProtoReflect.Descriptor instead.
func (*Logger) Descriptor() ([]byte, []int) {
	return file_conf_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *Logger) GetMode() MODE {
	if x != nil {
		return x.Mode
	}
	return MODE_DEV
}

func (x *Logger) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Logger) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Logger) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *Logger) GetFormatJson() bool {
	if x != nil {
		return x.FormatJson
	}
	return false
}

func (x *Logger) GetErrorFile() bool {
	if x != nil {
		return x.ErrorFile
	}
	return false
}

func (x *Logger) GetSensitive() []string {
	if x != nil {
		return x.Sensitive
	}
	return nil
}

func (x *Logger) GetRotate() *Rotate {
	if x != nil {
		return x.Rotate
	}
	return nil
}

type Rotate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 每个日志文件的最大大小;（MB）>0
	MaxSizeMB int32 `protobuf:"varint,1,opt,name=maxSizeMB,proto3" json:"maxSizeMB,omitempty"`
	// 最多保留的旧日志文件数量; back>=0 0:表示不保存旧的分割日志
	MaxBackups int32 `protobuf:"varint,2,opt,name=maxBackups,proto3" json:"maxBackups,omitempty"`
	// 日志文件最长保存天数; days>0 0:日志文件永久保留
	MaxAgeDays int32 `protobuf:"varint,3,opt,name=maxAgeDays,proto3" json:"maxAgeDays,omitempty"`
	// 是否启用 gzip 压缩旧文件
	Compress bool `protobuf:"varint,4,opt,name=compress,proto3" json:"compress,omitempty"`
	// 是否使用本地时间（否则使用 UTC）
	LocalTime     bool `protobuf:"varint,5,opt,name=localTime,proto3" json:"localTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rotate) Reset() {
	*x = Rotate{}
	mi := &file_conf_conf_conf_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rotate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rotate) ProtoMessage() {}

func (x *Rotate) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_conf_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rotate.ProtoReflect.Descriptor instead.
func (*Rotate) Descriptor() ([]byte, []int) {
	return file_conf_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *Rotate) GetMaxSizeMB() int32 {
	if x != nil {
		return x.MaxSizeMB
	}
	return 0
}

func (x *Rotate) GetMaxBackups() int32 {
	if x != nil {
		return x.MaxBackups
	}
	return 0
}

func (x *Rotate) GetMaxAgeDays() int32 {
	if x != nil {
		return x.MaxAgeDays
	}
	return 0
}

func (x *Rotate) GetCompress() bool {
	if x != nil {
		return x.Compress
	}
	return false
}

func (x *Rotate) GetLocalTime() bool {
	if x != nil {
		return x.LocalTime
	}
	return false
}

type Alerter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 启用/关闭告警发送
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// 告警消息前缀（如服务名标识）
	Prefix string `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// 默认html，可选json
	Format        string `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Alerter) Reset() {
	*x = Alerter{}
	mi := &file_conf_conf_conf_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Alerter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alerter) ProtoMessage() {}

func (x *Alerter) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_conf_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alerter.ProtoReflect.Descriptor instead.
func (*Alerter) Descriptor() ([]byte, []int) {
	return file_conf_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *Alerter) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Alerter) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *Alerter) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type Telegram struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ChatID        string                 `protobuf:"bytes,2,opt,name=chatID,proto3" json:"chatID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Telegram) Reset() {
	*x = Telegram{}
	mi := &file_conf_conf_conf_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Telegram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Telegram) ProtoMessage() {}

func (x *Telegram) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_conf_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Telegram.ProtoReflect.Descriptor instead.
func (*Telegram) Descriptor() ([]byte, []int) {
	return file_conf_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *Telegram) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Telegram) GetChatID() string {
	if x != nil {
		return x.ChatID
	}
	return ""
}

var File_conf_conf_conf_proto protoreflect.FileDescriptor

const file_conf_conf_conf_proto_rawDesc = "" +
	"\n" +
	"\x14conf/conf/conf.proto\x12\n" +
	"kratos.api\x1a\x1egoogle/protobuf/duration.proto\x1a\x17validate/validate.proto\"8\n" +
	"\tbootstrap\x12+\n" +
	"\x03log\x18\x01 \x01(\v2\x0f.kratos.api.LogB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x03log\"\xb0\x01\n" +
	"\x03Log\x124\n" +
	"\x06logger\x18\x01 \x01(\v2\x12.kratos.api.LoggerB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06logger\x127\n" +
	"\aalerter\x18\x02 \x01(\v2\x13.kratos.api.AlerterB\b\xfaB\x05\x8a\x01\x02\x10\x01R\aalerter\x12:\n" +
	"\btelegram\x18\x03 \x01(\v2\x14.kratos.api.TelegramB\b\xfaB\x05\x8a\x01\x02\x10\x01R\btelegram\"\xb9\x02\n" +
	"\x06Logger\x12$\n" +
	"\x04mode\x18\x01 \x01(\x0e2\x10.kratos.api.MODER\x04mode\x12\x18\n" +
	"\aappName\x18\x02 \x01(\tR\aappName\x125\n" +
	"\x05level\x18\x03 \x01(\tB\x1f\xfaB\x1cr\x1aR\x05debugR\x04infoR\x04warnR\x05errorR\x05level\x12\x1c\n" +
	"\tdirectory\x18\x04 \x01(\tR\tdirectory\x12\x1e\n" +
	"\n" +
	"formatJson\x18\x05 \x01(\bR\n" +
	"formatJson\x12\x1c\n" +
	"\terrorFile\x18\x06 \x01(\bR\terrorFile\x12&\n" +
	"\tsensitive\x18\a \x03(\tB\b\xfaB\x05\x92\x01\x02\x18\x01R\tsensitive\x124\n" +
	"\x06rotate\x18\b \x01(\v2\x12.kratos.api.RotateB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06rotate\"\xbb\x01\n" +
	"\x06Rotate\x12%\n" +
	"\tmaxSizeMB\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\tmaxSizeMB\x12'\n" +
	"\n" +
	"maxBackups\x18\x02 \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\n" +
	"maxBackups\x12'\n" +
	"\n" +
	"maxAgeDays\x18\x03 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\n" +
	"maxAgeDays\x12\x1a\n" +
	"\bcompress\x18\x04 \x01(\bR\bcompress\x12\x1c\n" +
	"\tlocalTime\x18\x05 \x01(\bR\tlocalTime\"j\n" +
	"\aAlerter\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x16\n" +
	"\x06prefix\x18\x02 \x01(\tR\x06prefix\x12-\n" +
	"\x06format\x18\x03 \x01(\tB\x15\xfaB\x12r\x102\x0e^(html|json)?$R\x06format\"8\n" +
	"\bTelegram\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12\x16\n" +
	"\x06chatID\x18\x02 \x01(\tR\x06chatID*\x19\n" +
	"\x04MODE\x12\a\n" +
	"\x03DEV\x10\x00\x12\b\n" +
	"\x04PROD\x10\x01B\x0fZ\rzap/conf;confb\x06proto3"

var (
	file_conf_conf_conf_proto_rawDescOnce sync.Once
	file_conf_conf_conf_proto_rawDescData []byte
)

func file_conf_conf_conf_proto_rawDescGZIP() []byte {
	file_conf_conf_conf_proto_rawDescOnce.Do(func() {
		file_conf_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_conf_conf_conf_proto_rawDesc), len(file_conf_conf_conf_proto_rawDesc)))
	})
	return file_conf_conf_conf_proto_rawDescData
}

var file_conf_conf_conf_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_conf_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_conf_conf_conf_proto_goTypes = []any{
	(MODE)(0),         // 0: kratos.api.MODE
	(*Bootstrap)(nil), // 1: kratos.api.bootstrap
	(*Log)(nil),       // 2: kratos.api.Log
	(*Logger)(nil),    // 3: kratos.api.Logger
	(*Rotate)(nil),    // 4: kratos.api.Rotate
	(*Alerter)(nil),   // 5: kratos.api.Alerter
	(*Telegram)(nil),  // 6: kratos.api.Telegram
}
var file_conf_conf_conf_proto_depIdxs = []int32{
	2, // 0: kratos.api.bootstrap.log:type_name -> kratos.api.Log
	3, // 1: kratos.api.Log.logger:type_name -> kratos.api.Logger
	5, // 2: kratos.api.Log.alerter:type_name -> kratos.api.Alerter
	6, // 3: kratos.api.Log.telegram:type_name -> kratos.api.Telegram
	0, // 4: kratos.api.Logger.mode:type_name -> kratos.api.MODE
	4, // 5: kratos.api.Logger.rotate:type_name -> kratos.api.Rotate
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_conf_conf_conf_proto_init() }
func file_conf_conf_conf_proto_init() {
	if File_conf_conf_conf_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_conf_conf_conf_proto_rawDesc), len(file_conf_conf_conf_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_conf_conf_proto_goTypes,
		DependencyIndexes: file_conf_conf_conf_proto_depIdxs,
		EnumInfos:         file_conf_conf_conf_proto_enumTypes,
		MessageInfos:      file_conf_conf_conf_proto_msgTypes,
	}.Build()
	File_conf_conf_conf_proto = out.File
	file_conf_conf_conf_proto_goTypes = nil
	file_conf_conf_conf_proto_depIdxs = nil
}
