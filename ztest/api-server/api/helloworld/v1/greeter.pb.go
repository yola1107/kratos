// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: helloworld/v1/greeter.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameCommand int32

const (
	GameCommand_Nothing     GameCommand = 0 //
	GameCommand_SayHelloReq GameCommand = 1 //
	GameCommand_SayHelloRsp GameCommand = 2
	// request
	GameCommand_OnLoginReq       GameCommand = 1001 //登录
	GameCommand_OnLoginRsp       GameCommand = 1002
	GameCommand_OnLogoutReq      GameCommand = 1003 //登出
	GameCommand_OnLogoutRsp      GameCommand = 1004
	GameCommand_OnReadyReq       GameCommand = 1005 //准备
	GameCommand_OnReadyRsp       GameCommand = 1006
	GameCommand_OnSwitchTableReq GameCommand = 1007 //换桌
	GameCommand_OnSwitchTableRsp GameCommand = 1008
	GameCommand_OnSceneReq       GameCommand = 1009 //场景信息
	GameCommand_OnSceneRsp       GameCommand = 1010
	GameCommand_OnChatReq        GameCommand = 1011 //聊天
	GameCommand_OnChatRsp        GameCommand = 1012
	GameCommand_OnHostingReq     GameCommand = 1013 //托管
	GameCommand_OnHostingRsp     GameCommand = 1014
	GameCommand_OnForwardReq     GameCommand = 1015 //转发
	GameCommand_OnForwardRsp     GameCommand = 1016
	// game request
	GameCommand_OnActionReq   GameCommand = 1101 //玩家动作
	GameCommand_OnActionRsp   GameCommand = 1102
	GameCommand_OnAutoCallReq GameCommand = 1103 //自动跟注
	GameCommand_OnAutoCallRsp GameCommand = 1104
	// push
	GameCommand_OnUserInfoPush    GameCommand = 2001 //玩家信息
	GameCommand_OnEmojiConfigPush GameCommand = 2002 //表情道具配置
	GameCommand_OnPlayerQuitPush  GameCommand = 2003 //玩家退出
	GameCommand_OnUserOfflinePush GameCommand = 2004 //用户断线通知
	// game push
	GameCommand_OnSetBankerPush      GameCommand = 2100 //庄家通知
	GameCommand_OnSendCardPush       GameCommand = 2101 //发牌通知
	GameCommand_OnActivePush         GameCommand = 2102 //活动玩家通知
	GameCommand_OnRoundSeePush       GameCommand = 2103 //自动看牌通知
	GameCommand_OnAfterSeeButtonPush GameCommand = 2104 //按钮通知(看牌后触发新增按钮)
	GameCommand_OnShowCardPush       GameCommand = 2105 //亮牌通知
	GameCommand_OnResultPush         GameCommand = 2200 //结算通知
)

// Enum value maps for GameCommand.
var (
	GameCommand_name = map[int32]string{
		0:    "Nothing",
		1:    "SayHelloReq",
		2:    "SayHelloRsp",
		1001: "OnLoginReq",
		1002: "OnLoginRsp",
		1003: "OnLogoutReq",
		1004: "OnLogoutRsp",
		1005: "OnReadyReq",
		1006: "OnReadyRsp",
		1007: "OnSwitchTableReq",
		1008: "OnSwitchTableRsp",
		1009: "OnSceneReq",
		1010: "OnSceneRsp",
		1011: "OnChatReq",
		1012: "OnChatRsp",
		1013: "OnHostingReq",
		1014: "OnHostingRsp",
		1015: "OnForwardReq",
		1016: "OnForwardRsp",
		1101: "OnActionReq",
		1102: "OnActionRsp",
		1103: "OnAutoCallReq",
		1104: "OnAutoCallRsp",
		2001: "OnUserInfoPush",
		2002: "OnEmojiConfigPush",
		2003: "OnPlayerQuitPush",
		2004: "OnUserOfflinePush",
		2100: "OnSetBankerPush",
		2101: "OnSendCardPush",
		2102: "OnActivePush",
		2103: "OnRoundSeePush",
		2104: "OnAfterSeeButtonPush",
		2105: "OnShowCardPush",
		2200: "OnResultPush",
	}
	GameCommand_value = map[string]int32{
		"Nothing":              0,
		"SayHelloReq":          1,
		"SayHelloRsp":          2,
		"OnLoginReq":           1001,
		"OnLoginRsp":           1002,
		"OnLogoutReq":          1003,
		"OnLogoutRsp":          1004,
		"OnReadyReq":           1005,
		"OnReadyRsp":           1006,
		"OnSwitchTableReq":     1007,
		"OnSwitchTableRsp":     1008,
		"OnSceneReq":           1009,
		"OnSceneRsp":           1010,
		"OnChatReq":            1011,
		"OnChatRsp":            1012,
		"OnHostingReq":         1013,
		"OnHostingRsp":         1014,
		"OnForwardReq":         1015,
		"OnForwardRsp":         1016,
		"OnActionReq":          1101,
		"OnActionRsp":          1102,
		"OnAutoCallReq":        1103,
		"OnAutoCallRsp":        1104,
		"OnUserInfoPush":       2001,
		"OnEmojiConfigPush":    2002,
		"OnPlayerQuitPush":     2003,
		"OnUserOfflinePush":    2004,
		"OnSetBankerPush":      2100,
		"OnSendCardPush":       2101,
		"OnActivePush":         2102,
		"OnRoundSeePush":       2103,
		"OnAfterSeeButtonPush": 2104,
		"OnShowCardPush":       2105,
		"OnResultPush":         2200,
	}
)

func (x GameCommand) Enum() *GameCommand {
	p := new(GameCommand)
	*p = x
	return p
}

func (x GameCommand) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameCommand) Descriptor() protoreflect.EnumDescriptor {
	return file_helloworld_v1_greeter_proto_enumTypes[0].Descriptor()
}

func (GameCommand) Type() protoreflect.EnumType {
	return &file_helloworld_v1_greeter_proto_enumTypes[0]
}

func (x GameCommand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameCommand.Descriptor instead.
func (GameCommand) EnumDescriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{0}
}

// 玩家动作类型
type ACTION int32

const (
	ACTION_UNKNOWN    ACTION = 0
	ACTION_CALL       ACTION = 1 // 跟注
	ACTION_RAISE      ACTION = 2 // 加注
	ACTION_SEE        ACTION = 3 // 看牌
	ACTION_PACK       ACTION = 4 // 弃牌
	ACTION_SHOW       ACTION = 5 // 比牌
	ACTION_SIDE       ACTION = 6 // 提前比牌
	ACTION_SIDE_REPLY ACTION = 7 // 提前比牌回应
)

// Enum value maps for ACTION.
var (
	ACTION_name = map[int32]string{
		0: "UNKNOWN",
		1: "CALL",
		2: "RAISE",
		3: "SEE",
		4: "PACK",
		5: "SHOW",
		6: "SIDE",
		7: "SIDE_REPLY",
	}
	ACTION_value = map[string]int32{
		"UNKNOWN":    0,
		"CALL":       1,
		"RAISE":      2,
		"SEE":        3,
		"PACK":       4,
		"SHOW":       5,
		"SIDE":       6,
		"SIDE_REPLY": 7,
	}
)

func (x ACTION) Enum() *ACTION {
	p := new(ACTION)
	*p = x
	return p
}

func (x ACTION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ACTION) Descriptor() protoreflect.EnumDescriptor {
	return file_helloworld_v1_greeter_proto_enumTypes[1].Descriptor()
}

func (ACTION) Type() protoreflect.EnumType {
	return &file_helloworld_v1_greeter_proto_enumTypes[1]
}

func (x ACTION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ACTION.Descriptor instead.
func (ACTION) EnumDescriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{1}
}

// The request message containing the user's name.
type HelloRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{1}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 登录
type LoginReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`   //ID
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`      //token
	Type          int32                  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`       //0:创建，1：加入 2:快速加入
	TableID       int32                  `protobuf:"varint,4,opt,name=tableID,proto3" json:"tableID,omitempty"` //桌子号
	ChairID       int32                  `protobuf:"varint,5,opt,name=chairID,proto3" json:"chairID,omitempty"` //椅子号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{2}
}

func (x *LoginReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LoginReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *LoginReq) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *LoginReq) GetChairID() int32 {
	if x != nil {
		return x.ChairID
	}
	return 0
}

type LoginRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`     //错误码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`        //错误信息
	UserID        int64                  `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"` //ID
	TableID       int32                  `protobuf:"varint,4,opt,name=tableID,proto3" json:"tableID,omitempty"`
	ChairID       int32                  `protobuf:"varint,5,opt,name=chairID,proto3" json:"chairID,omitempty"`
	ArenaID       int32                  `protobuf:"varint,6,opt,name=arenaID,proto3" json:"arenaID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRsp) Reset() {
	*x = LoginRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRsp) ProtoMessage() {}

func (x *LoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRsp.ProtoReflect.Descriptor instead.
func (*LoginRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{3}
}

func (x *LoginRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoginRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LoginRsp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LoginRsp) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *LoginRsp) GetChairID() int32 {
	if x != nil {
		return x.ChairID
	}
	return 0
}

func (x *LoginRsp) GetArenaID() int32 {
	if x != nil {
		return x.ArenaID
	}
	return 0
}

// 登出
type LogoutReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserDBID      int64                  `protobuf:"varint,1,opt,name=userDBID,proto3" json:"userDBID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutReq) Reset() {
	*x = LogoutReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutReq) ProtoMessage() {}

func (x *LogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutReq.ProtoReflect.Descriptor instead.
func (*LogoutReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{4}
}

func (x *LogoutReq) GetUserDBID() int64 {
	if x != nil {
		return x.UserDBID
	}
	return 0
}

type LogoutRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` //错误码 0:成功
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    //错误信息 主动/踢人
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutRsp) Reset() {
	*x = LogoutRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRsp) ProtoMessage() {}

func (x *LogoutRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRsp.ProtoReflect.Descriptor instead.
func (*LogoutRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{5}
}

func (x *LogoutRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LogoutRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 准备
type ReadyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	IsReady       bool                   `protobuf:"varint,2,opt,name=isReady,proto3" json:"isReady,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadyReq) Reset() {
	*x = ReadyReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyReq) ProtoMessage() {}

func (x *ReadyReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyReq.ProtoReflect.Descriptor instead.
func (*ReadyReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{6}
}

func (x *ReadyReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ReadyReq) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

type ReadyRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	IsReady       bool                   `protobuf:"varint,2,opt,name=isReady,proto3" json:"isReady,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadyRsp) Reset() {
	*x = ReadyRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyRsp) ProtoMessage() {}

func (x *ReadyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyRsp.ProtoReflect.Descriptor instead.
func (*ReadyRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{7}
}

func (x *ReadyRsp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ReadyRsp) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

// 换桌
type SwitchTableReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ChairId       int32                  `protobuf:"varint,2,opt,name=chairId,proto3" json:"chairId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchTableReq) Reset() {
	*x = SwitchTableReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchTableReq) ProtoMessage() {}

func (x *SwitchTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchTableReq.ProtoReflect.Descriptor instead.
func (*SwitchTableReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{8}
}

func (x *SwitchTableReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SwitchTableReq) GetChairId() int32 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

type SwitchTableRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	UserID        int64                  `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchTableRsp) Reset() {
	*x = SwitchTableRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchTableRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchTableRsp) ProtoMessage() {}

func (x *SwitchTableRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchTableRsp.ProtoReflect.Descriptor instead.
func (*SwitchTableRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{9}
}

func (x *SwitchTableRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SwitchTableRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SwitchTableRsp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

// 聊天/表情
type ChatReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int32                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"` //玩家ID
	OpType        int32                  `protobuf:"varint,2,opt,name=opType,proto3" json:"opType,omitempty"` //0表情 1快捷文字 2自定义文字
	FaceID        int32                  `protobuf:"varint,3,opt,name=faceID,proto3" json:"faceID,omitempty"` //表情or聊天ID
	Msg           string                 `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`        //聊天信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatReq) Reset() {
	*x = ChatReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatReq) ProtoMessage() {}

func (x *ChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatReq.ProtoReflect.Descriptor instead.
func (*ChatReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{10}
}

func (x *ChatReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ChatReq) GetOpType() int32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *ChatReq) GetFaceID() int32 {
	if x != nil {
		return x.FaceID
	}
	return 0
}

func (x *ChatReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ChatRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int32                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"` //玩家ID
	OpType        int32                  `protobuf:"varint,2,opt,name=opType,proto3" json:"opType,omitempty"` //0表情 1快捷文字 2自定义文字
	FaceID        int32                  `protobuf:"varint,3,opt,name=faceID,proto3" json:"faceID,omitempty"` //表情or聊天ID
	Msg           string                 `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`        //聊天信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatRsp) Reset() {
	*x = ChatRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRsp) ProtoMessage() {}

func (x *ChatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRsp.ProtoReflect.Descriptor instead.
func (*ChatRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{11}
}

func (x *ChatRsp) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ChatRsp) GetOpType() int32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *ChatRsp) GetFaceID() int32 {
	if x != nil {
		return x.FaceID
	}
	return 0
}

func (x *ChatRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 转发
type ForwardReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForwardReq) Reset() {
	*x = ForwardReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForwardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardReq) ProtoMessage() {}

func (x *ForwardReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardReq.ProtoReflect.Descriptor instead.
func (*ForwardReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{12}
}

func (x *ForwardReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ForwardReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ForwardRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForwardRsp) Reset() {
	*x = ForwardRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForwardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardRsp) ProtoMessage() {}

func (x *ForwardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardRsp.ProtoReflect.Descriptor instead.
func (*ForwardRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{13}
}

func (x *ForwardRsp) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ForwardRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 托管
type HostingReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsHosting     bool                   `protobuf:"varint,1,opt,name=isHosting,proto3" json:"isHosting,omitempty"` // true 托管； false 取消托管
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostingReq) Reset() {
	*x = HostingReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostingReq) ProtoMessage() {}

func (x *HostingReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostingReq.ProtoReflect.Descriptor instead.
func (*HostingReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{14}
}

func (x *HostingReq) GetIsHosting() bool {
	if x != nil {
		return x.IsHosting
	}
	return false
}

type HostingRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChairId       int32                  `protobuf:"varint,1,opt,name=chairId,proto3" json:"chairId,omitempty"`     //座位号
	Status        int32                  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`       //1:正常  2:托管
	AiNum         int32                  `protobuf:"varint,3,opt,name=aiNum,proto3" json:"aiNum,omitempty"`         //玩家（非断线）超时引起的当前局的托管次数
	PlayTimes     int32                  `protobuf:"varint,4,opt,name=playTimes,proto3" json:"playTimes,omitempty"` //操作时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostingRsp) Reset() {
	*x = HostingRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostingRsp) ProtoMessage() {}

func (x *HostingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostingRsp.ProtoReflect.Descriptor instead.
func (*HostingRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{15}
}

func (x *HostingRsp) GetChairId() int32 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

func (x *HostingRsp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *HostingRsp) GetAiNum() int32 {
	if x != nil {
		return x.AiNum
	}
	return 0
}

func (x *HostingRsp) GetPlayTimes() int32 {
	if x != nil {
		return x.PlayTimes
	}
	return 0
}

// 离桌通知
type PlayerQuitPush struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`   //玩家ID
	ChairID       int32                  `protobuf:"varint,2,opt,name=chairID,proto3" json:"chairID,omitempty"` //椅子号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerQuitPush) Reset() {
	*x = PlayerQuitPush{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerQuitPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerQuitPush) ProtoMessage() {}

func (x *PlayerQuitPush) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerQuitPush.ProtoReflect.Descriptor instead.
func (*PlayerQuitPush) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{16}
}

func (x *PlayerQuitPush) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PlayerQuitPush) GetChairID() int32 {
	if x != nil {
		return x.ChairID
	}
	return 0
}

// 用户断线通知
type UserOfflinePush struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`       //用户ID
	IsOffline     bool                   `protobuf:"varint,2,opt,name=isOffline,proto3" json:"isOffline,omitempty"` //用户离线状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserOfflinePush) Reset() {
	*x = UserOfflinePush{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserOfflinePush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOfflinePush) ProtoMessage() {}

func (x *UserOfflinePush) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOfflinePush.ProtoReflect.Descriptor instead.
func (*UserOfflinePush) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{17}
}

func (x *UserOfflinePush) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserOfflinePush) GetIsOffline() bool {
	if x != nil {
		return x.IsOffline
	}
	return false
}

type UserInfoPush struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`      //用户ID
	ChairId       int32                  `protobuf:"varint,2,opt,name=chairId,proto3" json:"chairId,omitempty"`    //椅子号
	UserName      string                 `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`   //用户名字
	Money         float64                `protobuf:"fixed64,4,opt,name=money,proto3" json:"money,omitempty"`       //玩家金币
	Avatar        string                 `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`       // 头像
	AvatarUrl     string                 `protobuf:"bytes,6,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"` // 头像
	Vip           int32                  `protobuf:"varint,7,opt,name=vip,proto3" json:"vip,omitempty"`            //用户vip
	Status        int32                  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`      //用户状态，符合原Frame的用户状态 0:free 1:sit(noReady) 2:ready 3:gaming
	Ip            string                 `protobuf:"bytes,9,opt,name=ip,proto3" json:"ip,omitempty"`               //ip地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfoPush) Reset() {
	*x = UserInfoPush{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfoPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoPush) ProtoMessage() {}

func (x *UserInfoPush) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoPush.ProtoReflect.Descriptor instead.
func (*UserInfoPush) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{18}
}

func (x *UserInfoPush) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserInfoPush) GetChairId() int32 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

func (x *UserInfoPush) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInfoPush) GetMoney() float64 {
	if x != nil {
		return x.Money
	}
	return 0
}

func (x *UserInfoPush) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfoPush) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UserInfoPush) GetVip() int32 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *UserInfoPush) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserInfoPush) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type SetBankerPush struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChairId       int32                  `protobuf:"varint,1,opt,name=ChairId,proto3" json:"ChairId,omitempty"` //庄家chairId
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetBankerPush) Reset() {
	*x = SetBankerPush{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetBankerPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBankerPush) ProtoMessage() {}

func (x *SetBankerPush) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBankerPush.ProtoReflect.Descriptor instead.
func (*SetBankerPush) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{19}
}

func (x *SetBankerPush) GetChairId() int32 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

type SendCardPush struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Cards         []int32                `protobuf:"varint,2,rep,packed,name=cards,proto3" json:"cards,omitempty"`
	CardsType     int32                  `protobuf:"varint,3,opt,name=cardsType,proto3" json:"cardsType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCardPush) Reset() {
	*x = SendCardPush{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCardPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCardPush) ProtoMessage() {}

func (x *SendCardPush) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCardPush.ProtoReflect.Descriptor instead.
func (*SendCardPush) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{20}
}

func (x *SendCardPush) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SendCardPush) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *SendCardPush) GetCardsType() int32 {
	if x != nil {
		return x.CardsType
	}
	return 0
}

// 场景信息
type SceneReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SceneReq) Reset() {
	*x = SceneReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SceneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneReq) ProtoMessage() {}

func (x *SceneReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneReq.ProtoReflect.Descriptor instead.
func (*SceneReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{21}
}

func (x *SceneReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type SceneRsp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 配置信息
	BaseScore    float64 `protobuf:"fixed64,1,opt,name=baseScore,proto3" json:"baseScore,omitempty"`      //
	ChLimit      float64 `protobuf:"fixed64,2,opt,name=chLimit,proto3" json:"chLimit,omitempty"`          //
	PotLimit     float64 `protobuf:"fixed64,3,opt,name=potLimit,proto3" json:"potLimit,omitempty"`        //
	AutoSeeRound int32   `protobuf:"varint,4,opt,name=autoSeeRound,proto3" json:"autoSeeRound,omitempty"` //
	// 游戏状态
	Stage    int32   `protobuf:"varint,5,opt,name=stage,proto3" json:"stage,omitempty"`     //游戏的状态
	Timeout  int64   `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout,omitempty"` //剩余时间 s
	Active   int32   `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`   //当前操作位置
	Banker   int32   `protobuf:"varint,8,opt,name=banker,proto3" json:"banker,omitempty"`   //庄家位置
	CurRound int32   `protobuf:"varint,9,opt,name=curRound,proto3" json:"curRound,omitempty"`
	TotalBet float64 `protobuf:"fixed64,10,opt,name=totalBet,proto3" json:"totalBet,omitempty"` //
	// 玩家信息
	Players       []*PlayerScene `protobuf:"bytes,11,rep,name=players,proto3" json:"players,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SceneRsp) Reset() {
	*x = SceneRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SceneRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneRsp) ProtoMessage() {}

func (x *SceneRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneRsp.ProtoReflect.Descriptor instead.
func (*SceneRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{22}
}

func (x *SceneRsp) GetBaseScore() float64 {
	if x != nil {
		return x.BaseScore
	}
	return 0
}

func (x *SceneRsp) GetChLimit() float64 {
	if x != nil {
		return x.ChLimit
	}
	return 0
}

func (x *SceneRsp) GetPotLimit() float64 {
	if x != nil {
		return x.PotLimit
	}
	return 0
}

func (x *SceneRsp) GetAutoSeeRound() int32 {
	if x != nil {
		return x.AutoSeeRound
	}
	return 0
}

func (x *SceneRsp) GetStage() int32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *SceneRsp) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *SceneRsp) GetActive() int32 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *SceneRsp) GetBanker() int32 {
	if x != nil {
		return x.Banker
	}
	return 0
}

func (x *SceneRsp) GetCurRound() int32 {
	if x != nil {
		return x.CurRound
	}
	return 0
}

func (x *SceneRsp) GetTotalBet() float64 {
	if x != nil {
		return x.TotalBet
	}
	return 0
}

func (x *SceneRsp) GetPlayers() []*PlayerScene {
	if x != nil {
		return x.Players
	}
	return nil
}

type PlayerScene struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`                                 //玩家ID
	ChairId       int32                  `protobuf:"varint,2,opt,name=chairId,proto3" json:"chairId,omitempty"`                               //玩家座位号
	Status        int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                                 //玩家状态
	Hosting       bool                   `protobuf:"varint,4,opt,name=hosting,proto3" json:"hosting,omitempty"`                               //是否托管
	Offline       bool                   `protobuf:"varint,5,opt,name=offline,proto3" json:"offline,omitempty"`                               //是否断线
	LastOp        ACTION                 `protobuf:"varint,6,opt,name=lastOp,proto3,enum=helloworld.v1.ACTION" json:"lastOp,omitempty"`       //最后操作
	CurBet        float64                `protobuf:"fixed64,7,opt,name=curBet,proto3" json:"curBet,omitempty"`                                //
	TotalBet      float64                `protobuf:"fixed64,8,opt,name=totalBet,proto3" json:"totalBet,omitempty"`                            //
	Seen          bool                   `protobuf:"varint,9,opt,name=seen,proto3" json:"seen,omitempty"`                                     //
	IsAutoCall    bool                   `protobuf:"varint,10,opt,name=isAutoCall,proto3" json:"isAutoCall,omitempty"`                        //自动跟注 0:未开启 1:已开启
	IsPaying      bool                   `protobuf:"varint,11,opt,name=isPaying,proto3" json:"isPaying,omitempty"`                            //支付状态 1:支付中
	Cards         []int32                `protobuf:"varint,12,rep,packed,name=cards,proto3" json:"cards,omitempty"`                           //
	CardsType     int32                  `protobuf:"varint,13,opt,name=cardsType,proto3" json:"cardsType,omitempty"`                          //
	CanOp         []ACTION               `protobuf:"varint,14,rep,packed,name=canOp,proto3,enum=helloworld.v1.ACTION" json:"canOp,omitempty"` //可操作列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerScene) Reset() {
	*x = PlayerScene{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerScene) ProtoMessage() {}

func (x *PlayerScene) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerScene.ProtoReflect.Descriptor instead.
func (*PlayerScene) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{23}
}

func (x *PlayerScene) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PlayerScene) GetChairId() int32 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

func (x *PlayerScene) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PlayerScene) GetHosting() bool {
	if x != nil {
		return x.Hosting
	}
	return false
}

func (x *PlayerScene) GetOffline() bool {
	if x != nil {
		return x.Offline
	}
	return false
}

func (x *PlayerScene) GetLastOp() ACTION {
	if x != nil {
		return x.LastOp
	}
	return ACTION_UNKNOWN
}

func (x *PlayerScene) GetCurBet() float64 {
	if x != nil {
		return x.CurBet
	}
	return 0
}

func (x *PlayerScene) GetTotalBet() float64 {
	if x != nil {
		return x.TotalBet
	}
	return 0
}

func (x *PlayerScene) GetSeen() bool {
	if x != nil {
		return x.Seen
	}
	return false
}

func (x *PlayerScene) GetIsAutoCall() bool {
	if x != nil {
		return x.IsAutoCall
	}
	return false
}

func (x *PlayerScene) GetIsPaying() bool {
	if x != nil {
		return x.IsPaying
	}
	return false
}

func (x *PlayerScene) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *PlayerScene) GetCardsType() int32 {
	if x != nil {
		return x.CardsType
	}
	return 0
}

func (x *PlayerScene) GetCanOp() []ACTION {
	if x != nil {
		return x.CanOp
	}
	return nil
}

type ActivePush struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stage         int32                  `protobuf:"varint,1,opt,name=stage,proto3" json:"stage,omitempty"`                                  //游戏的状态
	Timeout       int64                  `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`                              //剩余时间 s
	Active        int32                  `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`                                //当前操作位置
	CurRound      int32                  `protobuf:"varint,4,opt,name=curRound,proto3" json:"curRound,omitempty"`                            //
	CurBet        float64                `protobuf:"fixed64,5,opt,name=curBet,proto3" json:"curBet,omitempty"`                               //
	TotalBet      float64                `protobuf:"fixed64,6,opt,name=totalBet,proto3" json:"totalBet,omitempty"`                           //
	RaiseBet      float64                `protobuf:"fixed64,7,opt,name=raiseBet,proto3" json:"raiseBet,omitempty"`                           // RAISE需要的投入
	CanOp         []ACTION               `protobuf:"varint,8,rep,packed,name=canOp,proto3,enum=helloworld.v1.ACTION" json:"canOp,omitempty"` //可操作列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivePush) Reset() {
	*x = ActivePush{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivePush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivePush) ProtoMessage() {}

func (x *ActivePush) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivePush.ProtoReflect.Descriptor instead.
func (*ActivePush) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{24}
}

func (x *ActivePush) GetStage() int32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *ActivePush) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ActivePush) GetActive() int32 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *ActivePush) GetCurRound() int32 {
	if x != nil {
		return x.CurRound
	}
	return 0
}

func (x *ActivePush) GetCurBet() float64 {
	if x != nil {
		return x.CurBet
	}
	return 0
}

func (x *ActivePush) GetTotalBet() float64 {
	if x != nil {
		return x.TotalBet
	}
	return 0
}

func (x *ActivePush) GetRaiseBet() float64 {
	if x != nil {
		return x.RaiseBet
	}
	return 0
}

func (x *ActivePush) GetCanOp() []ACTION {
	if x != nil {
		return x.CanOp
	}
	return nil
}

type ActionReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserID         int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`                           //用户ID
	Action         ACTION                 `protobuf:"varint,2,opt,name=action,proto3,enum=helloworld.v1.ACTION" json:"action,omitempty"` //动作
	SideReplyAllow bool                   `protobuf:"varint,3,opt,name=sideReplyAllow,proto3" json:"sideReplyAllow,omitempty"`           //
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ActionReq) Reset() {
	*x = ActionReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionReq) ProtoMessage() {}

func (x *ActionReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionReq.ProtoReflect.Descriptor instead.
func (*ActionReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{25}
}

func (x *ActionReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ActionReq) GetAction() ACTION {
	if x != nil {
		return x.Action
	}
	return ACTION_UNKNOWN
}

func (x *ActionReq) GetSideReplyAllow() bool {
	if x != nil {
		return x.SideReplyAllow
	}
	return false
}

type ActionRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                               //错误码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                                  //错误信息
	UserID        int64                  `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"`                           //用户ID
	ChairID       int32                  `protobuf:"varint,4,opt,name=chairID,proto3" json:"chairID,omitempty"`                         //椅子号
	Action        ACTION                 `protobuf:"varint,5,opt,name=action,proto3,enum=helloworld.v1.ACTION" json:"action,omitempty"` //动作
	SeeCards      *SeeCards              `protobuf:"bytes,6,opt,name=seeCards,proto3" json:"seeCards,omitempty"`                        //看牌信息 see
	BetInfo       *BetInfo               `protobuf:"bytes,7,opt,name=betInfo,proto3" json:"betInfo,omitempty"`                          //下注信息 pack/call/raise/show/sideshow
	CompareInfo   *CompareInfo           `protobuf:"bytes,8,opt,name=compareInfo,proto3" json:"compareInfo,omitempty"`                  //比牌信息 show/sideshow/sideshow_reply
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionRsp) Reset() {
	*x = ActionRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionRsp) ProtoMessage() {}

func (x *ActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionRsp.ProtoReflect.Descriptor instead.
func (*ActionRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{26}
}

func (x *ActionRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ActionRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ActionRsp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ActionRsp) GetChairID() int32 {
	if x != nil {
		return x.ChairID
	}
	return 0
}

func (x *ActionRsp) GetAction() ACTION {
	if x != nil {
		return x.Action
	}
	return ACTION_UNKNOWN
}

func (x *ActionRsp) GetSeeCards() *SeeCards {
	if x != nil {
		return x.SeeCards
	}
	return nil
}

func (x *ActionRsp) GetBetInfo() *BetInfo {
	if x != nil {
		return x.BetInfo
	}
	return nil
}

func (x *ActionRsp) GetCompareInfo() *CompareInfo {
	if x != nil {
		return x.CompareInfo
	}
	return nil
}

// 看牌信息  触发看牌动作
type SeeCards struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cards         []int32                `protobuf:"varint,1,rep,packed,name=cards,proto3" json:"cards,omitempty"`  //看牌玩家手牌
	CardsType     int32                  `protobuf:"varint,2,opt,name=cardsType,proto3" json:"cardsType,omitempty"` //看牌玩家手牌
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeeCards) Reset() {
	*x = SeeCards{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeeCards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeeCards) ProtoMessage() {}

func (x *SeeCards) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeeCards.ProtoReflect.Descriptor instead.
func (*SeeCards) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{27}
}

func (x *SeeCards) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *SeeCards) GetCardsType() int32 {
	if x != nil {
		return x.CardsType
	}
	return 0
}

// 下注信息 触发下注动作
type BetInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurBet        float64                `protobuf:"fixed64,1,opt,name=curBet,proto3" json:"curBet,omitempty"`       //
	TotalBet      float64                `protobuf:"fixed64,2,opt,name=totalBet,proto3" json:"totalBet,omitempty"`   //
	PlayerBet     float64                `protobuf:"fixed64,3,opt,name=playerBet,proto3" json:"playerBet,omitempty"` //
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BetInfo) Reset() {
	*x = BetInfo{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetInfo) ProtoMessage() {}

func (x *BetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetInfo.ProtoReflect.Descriptor instead.
func (*BetInfo) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{28}
}

func (x *BetInfo) GetCurBet() float64 {
	if x != nil {
		return x.CurBet
	}
	return 0
}

func (x *BetInfo) GetTotalBet() float64 {
	if x != nil {
		return x.TotalBet
	}
	return 0
}

func (x *BetInfo) GetPlayerBet() float64 {
	if x != nil {
		return x.PlayerBet
	}
	return 0
}

// 比牌信息 触发比牌动作
type CompareInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TargetUid      int64                  `protobuf:"varint,1,opt,name=targetUid,proto3" json:"targetUid,omitempty"`
	TargetChairID  int32                  `protobuf:"varint,2,opt,name=targetChairID,proto3" json:"targetChairID,omitempty"`
	TargetStatus   int32                  `protobuf:"varint,3,opt,name=targetStatus,proto3" json:"targetStatus,omitempty"`
	SideReplyAllow bool                   `protobuf:"varint,4,opt,name=sideReplyAllow,proto3" json:"sideReplyAllow,omitempty"` //
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CompareInfo) Reset() {
	*x = CompareInfo{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareInfo) ProtoMessage() {}

func (x *CompareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareInfo.ProtoReflect.Descriptor instead.
func (*CompareInfo) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{29}
}

func (x *CompareInfo) GetTargetUid() int64 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *CompareInfo) GetTargetChairID() int32 {
	if x != nil {
		return x.TargetChairID
	}
	return 0
}

func (x *CompareInfo) GetTargetStatus() int32 {
	if x != nil {
		return x.TargetStatus
	}
	return 0
}

func (x *CompareInfo) GetSideReplyAllow() bool {
	if x != nil {
		return x.SideReplyAllow
	}
	return false
}

type AfterSeeButtonPush struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"` //当前活动玩家的ID
	CanShow       bool                   `protobuf:"varint,2,opt,name=canShow,proto3" json:"canShow,omitempty"`
	CanSideShow   bool                   `protobuf:"varint,3,opt,name=canSideShow,proto3" json:"canSideShow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AfterSeeButtonPush) Reset() {
	*x = AfterSeeButtonPush{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AfterSeeButtonPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AfterSeeButtonPush) ProtoMessage() {}

func (x *AfterSeeButtonPush) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AfterSeeButtonPush.ProtoReflect.Descriptor instead.
func (*AfterSeeButtonPush) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{30}
}

func (x *AfterSeeButtonPush) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AfterSeeButtonPush) GetCanShow() bool {
	if x != nil {
		return x.CanShow
	}
	return false
}

func (x *AfterSeeButtonPush) GetCanSideShow() bool {
	if x != nil {
		return x.CanSideShow
	}
	return false
}

type AutoCallReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`     //用户ID
	AutoCall      bool                   `protobuf:"varint,2,opt,name=autoCall,proto3" json:"autoCall,omitempty"` //是否自动跟注
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoCallReq) Reset() {
	*x = AutoCallReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoCallReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoCallReq) ProtoMessage() {}

func (x *AutoCallReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoCallReq.ProtoReflect.Descriptor instead.
func (*AutoCallReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{31}
}

func (x *AutoCallReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AutoCallReq) GetAutoCall() bool {
	if x != nil {
		return x.AutoCall
	}
	return false
}

type AutoCallRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`     //用户ID
	AutoCall      bool                   `protobuf:"varint,2,opt,name=autoCall,proto3" json:"autoCall,omitempty"` //是否自动跟注
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoCallRsp) Reset() {
	*x = AutoCallRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoCallRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoCallRsp) ProtoMessage() {}

func (x *AutoCallRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoCallRsp.ProtoReflect.Descriptor instead.
func (*AutoCallRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{32}
}

func (x *AutoCallRsp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AutoCallRsp) GetAutoCall() bool {
	if x != nil {
		return x.AutoCall
	}
	return false
}

type ResultPush struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"`   //用户ID
	ChairID       int32                  `protobuf:"varint,4,opt,name=chairID,proto3" json:"chairID,omitempty"` //椅子号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResultPush) Reset() {
	*x = ResultPush{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultPush) ProtoMessage() {}

func (x *ResultPush) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultPush.ProtoReflect.Descriptor instead.
func (*ResultPush) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{33}
}

func (x *ResultPush) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ResultPush) GetChairID() int32 {
	if x != nil {
		return x.ChairID
	}
	return 0
}

var File_helloworld_v1_greeter_proto protoreflect.FileDescriptor

const file_helloworld_v1_greeter_proto_rawDesc = "" +
	"\n" +
	"\x1bhelloworld/v1/greeter.proto\x12\rhelloworld.v1\x1a\x1cgoogle/api/annotations.proto\"\"\n" +
	"\fHelloRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"&\n" +
	"\n" +
	"HelloReply\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x80\x01\n" +
	"\bLoginReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12\x12\n" +
	"\x04type\x18\x03 \x01(\x05R\x04type\x12\x18\n" +
	"\atableID\x18\x04 \x01(\x05R\atableID\x12\x18\n" +
	"\achairID\x18\x05 \x01(\x05R\achairID\"\x96\x01\n" +
	"\bLoginRsp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x16\n" +
	"\x06userID\x18\x03 \x01(\x03R\x06userID\x12\x18\n" +
	"\atableID\x18\x04 \x01(\x05R\atableID\x12\x18\n" +
	"\achairID\x18\x05 \x01(\x05R\achairID\x12\x18\n" +
	"\aarenaID\x18\x06 \x01(\x05R\aarenaID\"'\n" +
	"\tLogoutReq\x12\x1a\n" +
	"\buserDBID\x18\x01 \x01(\x03R\buserDBID\"1\n" +
	"\tLogoutRsp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\"<\n" +
	"\bReadyReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x18\n" +
	"\aisReady\x18\x02 \x01(\bR\aisReady\"<\n" +
	"\bReadyRsp\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x18\n" +
	"\aisReady\x18\x02 \x01(\bR\aisReady\"B\n" +
	"\x0eSwitchTableReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x18\n" +
	"\achairId\x18\x02 \x01(\x05R\achairId\"N\n" +
	"\x0eSwitchTableRsp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x16\n" +
	"\x06userID\x18\x03 \x01(\x03R\x06userID\"c\n" +
	"\aChatReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x05R\x06userID\x12\x16\n" +
	"\x06opType\x18\x02 \x01(\x05R\x06opType\x12\x16\n" +
	"\x06faceID\x18\x03 \x01(\x05R\x06faceID\x12\x10\n" +
	"\x03msg\x18\x04 \x01(\tR\x03msg\"c\n" +
	"\aChatRsp\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x05R\x06userID\x12\x16\n" +
	"\x06opType\x18\x02 \x01(\x05R\x06opType\x12\x16\n" +
	"\x06faceID\x18\x03 \x01(\x05R\x06faceID\x12\x10\n" +
	"\x03msg\x18\x04 \x01(\tR\x03msg\"2\n" +
	"\n" +
	"ForwardReq\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\"2\n" +
	"\n" +
	"ForwardRsp\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\"*\n" +
	"\n" +
	"HostingReq\x12\x1c\n" +
	"\tisHosting\x18\x01 \x01(\bR\tisHosting\"r\n" +
	"\n" +
	"HostingRsp\x12\x18\n" +
	"\achairId\x18\x01 \x01(\x05R\achairId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\x05R\x06status\x12\x14\n" +
	"\x05aiNum\x18\x03 \x01(\x05R\x05aiNum\x12\x1c\n" +
	"\tplayTimes\x18\x04 \x01(\x05R\tplayTimes\"B\n" +
	"\x0ePlayerQuitPush\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x18\n" +
	"\achairID\x18\x02 \x01(\x05R\achairID\"G\n" +
	"\x0fUserOfflinePush\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x1c\n" +
	"\tisOffline\x18\x02 \x01(\bR\tisOffline\"\xe2\x01\n" +
	"\fUserInfoPush\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x18\n" +
	"\achairId\x18\x02 \x01(\x05R\achairId\x12\x1a\n" +
	"\buserName\x18\x03 \x01(\tR\buserName\x12\x14\n" +
	"\x05money\x18\x04 \x01(\x01R\x05money\x12\x16\n" +
	"\x06avatar\x18\x05 \x01(\tR\x06avatar\x12\x1c\n" +
	"\tavatarUrl\x18\x06 \x01(\tR\tavatarUrl\x12\x10\n" +
	"\x03vip\x18\a \x01(\x05R\x03vip\x12\x16\n" +
	"\x06status\x18\b \x01(\x05R\x06status\x12\x0e\n" +
	"\x02ip\x18\t \x01(\tR\x02ip\")\n" +
	"\rSetBankerPush\x12\x18\n" +
	"\aChairId\x18\x01 \x01(\x05R\aChairId\"Z\n" +
	"\fSendCardPush\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\x03R\x06UserID\x12\x14\n" +
	"\x05cards\x18\x02 \x03(\x05R\x05cards\x12\x1c\n" +
	"\tcardsType\x18\x03 \x01(\x05R\tcardsType\"\"\n" +
	"\bSceneReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\"\xd0\x02\n" +
	"\bSceneRsp\x12\x1c\n" +
	"\tbaseScore\x18\x01 \x01(\x01R\tbaseScore\x12\x18\n" +
	"\achLimit\x18\x02 \x01(\x01R\achLimit\x12\x1a\n" +
	"\bpotLimit\x18\x03 \x01(\x01R\bpotLimit\x12\"\n" +
	"\fautoSeeRound\x18\x04 \x01(\x05R\fautoSeeRound\x12\x14\n" +
	"\x05stage\x18\x05 \x01(\x05R\x05stage\x12\x18\n" +
	"\atimeout\x18\x06 \x01(\x03R\atimeout\x12\x16\n" +
	"\x06active\x18\a \x01(\x05R\x06active\x12\x16\n" +
	"\x06banker\x18\b \x01(\x05R\x06banker\x12\x1a\n" +
	"\bcurRound\x18\t \x01(\x05R\bcurRound\x12\x1a\n" +
	"\btotalBet\x18\n" +
	" \x01(\x01R\btotalBet\x124\n" +
	"\aplayers\x18\v \x03(\v2\x1a.helloworld.v1.PlayerSceneR\aplayers\"\x9f\x03\n" +
	"\vPlayerScene\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x18\n" +
	"\achairId\x18\x02 \x01(\x05R\achairId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\x05R\x06status\x12\x18\n" +
	"\ahosting\x18\x04 \x01(\bR\ahosting\x12\x18\n" +
	"\aoffline\x18\x05 \x01(\bR\aoffline\x12-\n" +
	"\x06lastOp\x18\x06 \x01(\x0e2\x15.helloworld.v1.ACTIONR\x06lastOp\x12\x16\n" +
	"\x06curBet\x18\a \x01(\x01R\x06curBet\x12\x1a\n" +
	"\btotalBet\x18\b \x01(\x01R\btotalBet\x12\x12\n" +
	"\x04seen\x18\t \x01(\bR\x04seen\x12\x1e\n" +
	"\n" +
	"isAutoCall\x18\n" +
	" \x01(\bR\n" +
	"isAutoCall\x12\x1a\n" +
	"\bisPaying\x18\v \x01(\bR\bisPaying\x12\x14\n" +
	"\x05cards\x18\f \x03(\x05R\x05cards\x12\x1c\n" +
	"\tcardsType\x18\r \x01(\x05R\tcardsType\x12+\n" +
	"\x05canOp\x18\x0e \x03(\x0e2\x15.helloworld.v1.ACTIONR\x05canOp\"\xed\x01\n" +
	"\n" +
	"ActivePush\x12\x14\n" +
	"\x05stage\x18\x01 \x01(\x05R\x05stage\x12\x18\n" +
	"\atimeout\x18\x02 \x01(\x03R\atimeout\x12\x16\n" +
	"\x06active\x18\x03 \x01(\x05R\x06active\x12\x1a\n" +
	"\bcurRound\x18\x04 \x01(\x05R\bcurRound\x12\x16\n" +
	"\x06curBet\x18\x05 \x01(\x01R\x06curBet\x12\x1a\n" +
	"\btotalBet\x18\x06 \x01(\x01R\btotalBet\x12\x1a\n" +
	"\braiseBet\x18\a \x01(\x01R\braiseBet\x12+\n" +
	"\x05canOp\x18\b \x03(\x0e2\x15.helloworld.v1.ACTIONR\x05canOp\"z\n" +
	"\tActionReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12-\n" +
	"\x06action\x18\x02 \x01(\x0e2\x15.helloworld.v1.ACTIONR\x06action\x12&\n" +
	"\x0esideReplyAllow\x18\x03 \x01(\bR\x0esideReplyAllow\"\xb7\x02\n" +
	"\tActionRsp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x16\n" +
	"\x06userID\x18\x03 \x01(\x03R\x06userID\x12\x18\n" +
	"\achairID\x18\x04 \x01(\x05R\achairID\x12-\n" +
	"\x06action\x18\x05 \x01(\x0e2\x15.helloworld.v1.ACTIONR\x06action\x123\n" +
	"\bseeCards\x18\x06 \x01(\v2\x17.helloworld.v1.SeeCardsR\bseeCards\x120\n" +
	"\abetInfo\x18\a \x01(\v2\x16.helloworld.v1.BetInfoR\abetInfo\x12<\n" +
	"\vcompareInfo\x18\b \x01(\v2\x1a.helloworld.v1.CompareInfoR\vcompareInfo\">\n" +
	"\bSeeCards\x12\x14\n" +
	"\x05cards\x18\x01 \x03(\x05R\x05cards\x12\x1c\n" +
	"\tcardsType\x18\x02 \x01(\x05R\tcardsType\"[\n" +
	"\aBetInfo\x12\x16\n" +
	"\x06curBet\x18\x01 \x01(\x01R\x06curBet\x12\x1a\n" +
	"\btotalBet\x18\x02 \x01(\x01R\btotalBet\x12\x1c\n" +
	"\tplayerBet\x18\x03 \x01(\x01R\tplayerBet\"\x9d\x01\n" +
	"\vCompareInfo\x12\x1c\n" +
	"\ttargetUid\x18\x01 \x01(\x03R\ttargetUid\x12$\n" +
	"\rtargetChairID\x18\x02 \x01(\x05R\rtargetChairID\x12\"\n" +
	"\ftargetStatus\x18\x03 \x01(\x05R\ftargetStatus\x12&\n" +
	"\x0esideReplyAllow\x18\x04 \x01(\bR\x0esideReplyAllow\"h\n" +
	"\x12AfterSeeButtonPush\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x18\n" +
	"\acanShow\x18\x02 \x01(\bR\acanShow\x12 \n" +
	"\vcanSideShow\x18\x03 \x01(\bR\vcanSideShow\"A\n" +
	"\vAutoCallReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x1a\n" +
	"\bautoCall\x18\x02 \x01(\bR\bautoCall\"A\n" +
	"\vAutoCallRsp\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x1a\n" +
	"\bautoCall\x18\x02 \x01(\bR\bautoCall\">\n" +
	"\n" +
	"ResultPush\x12\x16\n" +
	"\x06userID\x18\x03 \x01(\x03R\x06userID\x12\x18\n" +
	"\achairID\x18\x04 \x01(\x05R\achairID*\x9e\x05\n" +
	"\vGameCommand\x12\v\n" +
	"\aNothing\x10\x00\x12\x0f\n" +
	"\vSayHelloReq\x10\x01\x12\x0f\n" +
	"\vSayHelloRsp\x10\x02\x12\x0f\n" +
	"\n" +
	"OnLoginReq\x10\xe9\a\x12\x0f\n" +
	"\n" +
	"OnLoginRsp\x10\xea\a\x12\x10\n" +
	"\vOnLogoutReq\x10\xeb\a\x12\x10\n" +
	"\vOnLogoutRsp\x10\xec\a\x12\x0f\n" +
	"\n" +
	"OnReadyReq\x10\xed\a\x12\x0f\n" +
	"\n" +
	"OnReadyRsp\x10\xee\a\x12\x15\n" +
	"\x10OnSwitchTableReq\x10\xef\a\x12\x15\n" +
	"\x10OnSwitchTableRsp\x10\xf0\a\x12\x0f\n" +
	"\n" +
	"OnSceneReq\x10\xf1\a\x12\x0f\n" +
	"\n" +
	"OnSceneRsp\x10\xf2\a\x12\x0e\n" +
	"\tOnChatReq\x10\xf3\a\x12\x0e\n" +
	"\tOnChatRsp\x10\xf4\a\x12\x11\n" +
	"\fOnHostingReq\x10\xf5\a\x12\x11\n" +
	"\fOnHostingRsp\x10\xf6\a\x12\x11\n" +
	"\fOnForwardReq\x10\xf7\a\x12\x11\n" +
	"\fOnForwardRsp\x10\xf8\a\x12\x10\n" +
	"\vOnActionReq\x10\xcd\b\x12\x10\n" +
	"\vOnActionRsp\x10\xce\b\x12\x12\n" +
	"\rOnAutoCallReq\x10\xcf\b\x12\x12\n" +
	"\rOnAutoCallRsp\x10\xd0\b\x12\x13\n" +
	"\x0eOnUserInfoPush\x10\xd1\x0f\x12\x16\n" +
	"\x11OnEmojiConfigPush\x10\xd2\x0f\x12\x15\n" +
	"\x10OnPlayerQuitPush\x10\xd3\x0f\x12\x16\n" +
	"\x11OnUserOfflinePush\x10\xd4\x0f\x12\x14\n" +
	"\x0fOnSetBankerPush\x10\xb4\x10\x12\x13\n" +
	"\x0eOnSendCardPush\x10\xb5\x10\x12\x11\n" +
	"\fOnActivePush\x10\xb6\x10\x12\x13\n" +
	"\x0eOnRoundSeePush\x10\xb7\x10\x12\x19\n" +
	"\x14OnAfterSeeButtonPush\x10\xb8\x10\x12\x13\n" +
	"\x0eOnShowCardPush\x10\xb9\x10\x12\x11\n" +
	"\fOnResultPush\x10\x98\x11*a\n" +
	"\x06ACTION\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\b\n" +
	"\x04CALL\x10\x01\x12\t\n" +
	"\x05RAISE\x10\x02\x12\a\n" +
	"\x03SEE\x10\x03\x12\b\n" +
	"\x04PACK\x10\x04\x12\b\n" +
	"\x04SHOW\x10\x05\x12\b\n" +
	"\x04SIDE\x10\x06\x12\x0e\n" +
	"\n" +
	"SIDE_REPLY\x10\a2\xea\b\n" +
	"\aGreeter\x12a\n" +
	"\vSayHelloReq\x12\x1b.helloworld.v1.HelloRequest\x1a\x19.helloworld.v1.HelloReply\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/helloworld/{name}\x12^\n" +
	"\n" +
	"OnLoginReq\x12\x17.helloworld.v1.LoginReq\x1a\x17.helloworld.v1.LoginRsp\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/greeter/OnLoginReq\x12b\n" +
	"\vOnLogoutReq\x12\x18.helloworld.v1.LogoutReq\x1a\x18.helloworld.v1.LogoutRsp\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/greeter/OnLogoutReq\x12^\n" +
	"\n" +
	"OnReadyReq\x12\x17.helloworld.v1.ReadyReq\x1a\x17.helloworld.v1.ReadyRsp\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/greeter/OnReadyReq\x12v\n" +
	"\x10OnSwitchTableReq\x12\x1d.helloworld.v1.SwitchTableReq\x1a\x1d.helloworld.v1.SwitchTableRsp\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/greeter/OnSwitchTableReq\x12^\n" +
	"\n" +
	"OnSceneReq\x12\x17.helloworld.v1.SceneReq\x1a\x17.helloworld.v1.SceneRsp\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/greeter/OnSceneReq\x12`\n" +
	"\tOnChatReq\x12\x16.helloworld.v1.ChatReq\x1a\x16.helloworld.v1.ChatRsp\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/greeter/OnChatOrFaceReq\x12f\n" +
	"\fOnHostingReq\x12\x19.helloworld.v1.HostingReq\x1a\x19.helloworld.v1.HostingRsp\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/greeter/OnHostingReq\x12f\n" +
	"\fOnForwardReq\x12\x19.helloworld.v1.ForwardReq\x1a\x19.helloworld.v1.ForwardRsp\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/greeter/OnForwardReq\x12b\n" +
	"\vOnActionReq\x12\x18.helloworld.v1.ActionReq\x1a\x18.helloworld.v1.ActionRsp\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/greeter/OnActionReq\x12j\n" +
	"\rOnAutoCallReq\x12\x1a.helloworld.v1.AutoCallReq\x1a\x1a.helloworld.v1.AutoCallRsp\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/greeter/OnAutoCallReqBT\n" +
	"\x1cdev.kratos.api.helloworld.v1B\x11HelloworldProtoV1P\x01Z\x1fapi-server/api/helloworld/v1;v1b\x06proto3"

var (
	file_helloworld_v1_greeter_proto_rawDescOnce sync.Once
	file_helloworld_v1_greeter_proto_rawDescData []byte
)

func file_helloworld_v1_greeter_proto_rawDescGZIP() []byte {
	file_helloworld_v1_greeter_proto_rawDescOnce.Do(func() {
		file_helloworld_v1_greeter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_helloworld_v1_greeter_proto_rawDesc), len(file_helloworld_v1_greeter_proto_rawDesc)))
	})
	return file_helloworld_v1_greeter_proto_rawDescData
}

var file_helloworld_v1_greeter_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_helloworld_v1_greeter_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_helloworld_v1_greeter_proto_goTypes = []any{
	(GameCommand)(0),           // 0: helloworld.v1.GameCommand
	(ACTION)(0),                // 1: helloworld.v1.ACTION
	(*HelloRequest)(nil),       // 2: helloworld.v1.HelloRequest
	(*HelloReply)(nil),         // 3: helloworld.v1.HelloReply
	(*LoginReq)(nil),           // 4: helloworld.v1.LoginReq
	(*LoginRsp)(nil),           // 5: helloworld.v1.LoginRsp
	(*LogoutReq)(nil),          // 6: helloworld.v1.LogoutReq
	(*LogoutRsp)(nil),          // 7: helloworld.v1.LogoutRsp
	(*ReadyReq)(nil),           // 8: helloworld.v1.ReadyReq
	(*ReadyRsp)(nil),           // 9: helloworld.v1.ReadyRsp
	(*SwitchTableReq)(nil),     // 10: helloworld.v1.SwitchTableReq
	(*SwitchTableRsp)(nil),     // 11: helloworld.v1.SwitchTableRsp
	(*ChatReq)(nil),            // 12: helloworld.v1.ChatReq
	(*ChatRsp)(nil),            // 13: helloworld.v1.ChatRsp
	(*ForwardReq)(nil),         // 14: helloworld.v1.ForwardReq
	(*ForwardRsp)(nil),         // 15: helloworld.v1.ForwardRsp
	(*HostingReq)(nil),         // 16: helloworld.v1.HostingReq
	(*HostingRsp)(nil),         // 17: helloworld.v1.HostingRsp
	(*PlayerQuitPush)(nil),     // 18: helloworld.v1.PlayerQuitPush
	(*UserOfflinePush)(nil),    // 19: helloworld.v1.UserOfflinePush
	(*UserInfoPush)(nil),       // 20: helloworld.v1.UserInfoPush
	(*SetBankerPush)(nil),      // 21: helloworld.v1.SetBankerPush
	(*SendCardPush)(nil),       // 22: helloworld.v1.SendCardPush
	(*SceneReq)(nil),           // 23: helloworld.v1.SceneReq
	(*SceneRsp)(nil),           // 24: helloworld.v1.SceneRsp
	(*PlayerScene)(nil),        // 25: helloworld.v1.PlayerScene
	(*ActivePush)(nil),         // 26: helloworld.v1.ActivePush
	(*ActionReq)(nil),          // 27: helloworld.v1.ActionReq
	(*ActionRsp)(nil),          // 28: helloworld.v1.ActionRsp
	(*SeeCards)(nil),           // 29: helloworld.v1.SeeCards
	(*BetInfo)(nil),            // 30: helloworld.v1.BetInfo
	(*CompareInfo)(nil),        // 31: helloworld.v1.CompareInfo
	(*AfterSeeButtonPush)(nil), // 32: helloworld.v1.AfterSeeButtonPush
	(*AutoCallReq)(nil),        // 33: helloworld.v1.AutoCallReq
	(*AutoCallRsp)(nil),        // 34: helloworld.v1.AutoCallRsp
	(*ResultPush)(nil),         // 35: helloworld.v1.ResultPush
}
var file_helloworld_v1_greeter_proto_depIdxs = []int32{
	25, // 0: helloworld.v1.SceneRsp.players:type_name -> helloworld.v1.PlayerScene
	1,  // 1: helloworld.v1.PlayerScene.lastOp:type_name -> helloworld.v1.ACTION
	1,  // 2: helloworld.v1.PlayerScene.canOp:type_name -> helloworld.v1.ACTION
	1,  // 3: helloworld.v1.ActivePush.canOp:type_name -> helloworld.v1.ACTION
	1,  // 4: helloworld.v1.ActionReq.action:type_name -> helloworld.v1.ACTION
	1,  // 5: helloworld.v1.ActionRsp.action:type_name -> helloworld.v1.ACTION
	29, // 6: helloworld.v1.ActionRsp.seeCards:type_name -> helloworld.v1.SeeCards
	30, // 7: helloworld.v1.ActionRsp.betInfo:type_name -> helloworld.v1.BetInfo
	31, // 8: helloworld.v1.ActionRsp.compareInfo:type_name -> helloworld.v1.CompareInfo
	2,  // 9: helloworld.v1.Greeter.SayHelloReq:input_type -> helloworld.v1.HelloRequest
	4,  // 10: helloworld.v1.Greeter.OnLoginReq:input_type -> helloworld.v1.LoginReq
	6,  // 11: helloworld.v1.Greeter.OnLogoutReq:input_type -> helloworld.v1.LogoutReq
	8,  // 12: helloworld.v1.Greeter.OnReadyReq:input_type -> helloworld.v1.ReadyReq
	10, // 13: helloworld.v1.Greeter.OnSwitchTableReq:input_type -> helloworld.v1.SwitchTableReq
	23, // 14: helloworld.v1.Greeter.OnSceneReq:input_type -> helloworld.v1.SceneReq
	12, // 15: helloworld.v1.Greeter.OnChatReq:input_type -> helloworld.v1.ChatReq
	16, // 16: helloworld.v1.Greeter.OnHostingReq:input_type -> helloworld.v1.HostingReq
	14, // 17: helloworld.v1.Greeter.OnForwardReq:input_type -> helloworld.v1.ForwardReq
	27, // 18: helloworld.v1.Greeter.OnActionReq:input_type -> helloworld.v1.ActionReq
	33, // 19: helloworld.v1.Greeter.OnAutoCallReq:input_type -> helloworld.v1.AutoCallReq
	3,  // 20: helloworld.v1.Greeter.SayHelloReq:output_type -> helloworld.v1.HelloReply
	5,  // 21: helloworld.v1.Greeter.OnLoginReq:output_type -> helloworld.v1.LoginRsp
	7,  // 22: helloworld.v1.Greeter.OnLogoutReq:output_type -> helloworld.v1.LogoutRsp
	9,  // 23: helloworld.v1.Greeter.OnReadyReq:output_type -> helloworld.v1.ReadyRsp
	11, // 24: helloworld.v1.Greeter.OnSwitchTableReq:output_type -> helloworld.v1.SwitchTableRsp
	24, // 25: helloworld.v1.Greeter.OnSceneReq:output_type -> helloworld.v1.SceneRsp
	13, // 26: helloworld.v1.Greeter.OnChatReq:output_type -> helloworld.v1.ChatRsp
	17, // 27: helloworld.v1.Greeter.OnHostingReq:output_type -> helloworld.v1.HostingRsp
	15, // 28: helloworld.v1.Greeter.OnForwardReq:output_type -> helloworld.v1.ForwardRsp
	28, // 29: helloworld.v1.Greeter.OnActionReq:output_type -> helloworld.v1.ActionRsp
	34, // 30: helloworld.v1.Greeter.OnAutoCallReq:output_type -> helloworld.v1.AutoCallRsp
	20, // [20:31] is the sub-list for method output_type
	9,  // [9:20] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_helloworld_v1_greeter_proto_init() }
func file_helloworld_v1_greeter_proto_init() {
	if File_helloworld_v1_greeter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_helloworld_v1_greeter_proto_rawDesc), len(file_helloworld_v1_greeter_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_helloworld_v1_greeter_proto_goTypes,
		DependencyIndexes: file_helloworld_v1_greeter_proto_depIdxs,
		EnumInfos:         file_helloworld_v1_greeter_proto_enumTypes,
		MessageInfos:      file_helloworld_v1_greeter_proto_msgTypes,
	}.Build()
	File_helloworld_v1_greeter_proto = out.File
	file_helloworld_v1_greeter_proto_goTypes = nil
	file_helloworld_v1_greeter_proto_depIdxs = nil
}
