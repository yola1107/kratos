// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: helloworld/v1/greeter.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameCommand int32

const (
	GameCommand_Nothing     GameCommand = 0 //
	GameCommand_SayHelloReq GameCommand = 1 //
	GameCommand_SayHelloRsp GameCommand = 2
	// request
	GameCommand_OnLoginReq       GameCommand = 1001 //登录
	GameCommand_OnLoginRsp       GameCommand = 1002
	GameCommand_OnLogoutReq      GameCommand = 1003 //登出
	GameCommand_OnLogoutRsp      GameCommand = 1004
	GameCommand_OnReadyReq       GameCommand = 1005 //准备
	GameCommand_OnReadyRsp       GameCommand = 1006
	GameCommand_OnSwitchChairReq GameCommand = 1007 //换位
	GameCommand_OnSwitchChairRsp GameCommand = 1008
	GameCommand_OnSceneReq       GameCommand = 1009 //场景信息
	GameCommand_OnSceneRsp       GameCommand = 1010
	GameCommand_OnChatReq        GameCommand = 1011 //聊天
	GameCommand_OnChatRsp        GameCommand = 1012
	GameCommand_OnHostingReq     GameCommand = 1013 //托管
	GameCommand_OnHostingRsp     GameCommand = 1014
	GameCommand_OnForwardReq     GameCommand = 1015 //转发
	GameCommand_OnForwardRsp     GameCommand = 1016
	// push
	GameCommand_OnConfigPush       GameCommand = 2001 //配置信息
	GameCommand_OnResultPush       GameCommand = 2002 //结算
	GameCommand_OnUserInfoPush     GameCommand = 2003 //玩家信息
	GameCommand_OnEmojiConfigPush  GameCommand = 2004 //表情道具配置
	GameCommand_OnPlayerQuitPush   GameCommand = 2005 //玩家退出
	GameCommand_OnUserOfflinePush  GameCommand = 2006 //用户断线通知
	GameCommand_OnUpRoomOwnerPush  GameCommand = 2007 //房主信息
	GameCommand_OnUpRoomNumberPush GameCommand = 2008 //房间人数
	// game push
	GameCommand_OnSetBankerPush GameCommand = 2100 //庄家通知
	GameCommand_OnSendCardPush  GameCommand = 2101 //发牌通知
	GameCommand_OnActivePush    GameCommand = 2102 //活动玩家通知
)

// Enum value maps for GameCommand.
var (
	GameCommand_name = map[int32]string{
		0:    "Nothing",
		1:    "SayHelloReq",
		2:    "SayHelloRsp",
		1001: "OnLoginReq",
		1002: "OnLoginRsp",
		1003: "OnLogoutReq",
		1004: "OnLogoutRsp",
		1005: "OnReadyReq",
		1006: "OnReadyRsp",
		1007: "OnSwitchChairReq",
		1008: "OnSwitchChairRsp",
		1009: "OnSceneReq",
		1010: "OnSceneRsp",
		1011: "OnChatReq",
		1012: "OnChatRsp",
		1013: "OnHostingReq",
		1014: "OnHostingRsp",
		1015: "OnForwardReq",
		1016: "OnForwardRsp",
		2001: "OnConfigPush",
		2002: "OnResultPush",
		2003: "OnUserInfoPush",
		2004: "OnEmojiConfigPush",
		2005: "OnPlayerQuitPush",
		2006: "OnUserOfflinePush",
		2007: "OnUpRoomOwnerPush",
		2008: "OnUpRoomNumberPush",
		2100: "OnSetBankerPush",
		2101: "OnSendCardPush",
		2102: "OnActivePush",
	}
	GameCommand_value = map[string]int32{
		"Nothing":            0,
		"SayHelloReq":        1,
		"SayHelloRsp":        2,
		"OnLoginReq":         1001,
		"OnLoginRsp":         1002,
		"OnLogoutReq":        1003,
		"OnLogoutRsp":        1004,
		"OnReadyReq":         1005,
		"OnReadyRsp":         1006,
		"OnSwitchChairReq":   1007,
		"OnSwitchChairRsp":   1008,
		"OnSceneReq":         1009,
		"OnSceneRsp":         1010,
		"OnChatReq":          1011,
		"OnChatRsp":          1012,
		"OnHostingReq":       1013,
		"OnHostingRsp":       1014,
		"OnForwardReq":       1015,
		"OnForwardRsp":       1016,
		"OnConfigPush":       2001,
		"OnResultPush":       2002,
		"OnUserInfoPush":     2003,
		"OnEmojiConfigPush":  2004,
		"OnPlayerQuitPush":   2005,
		"OnUserOfflinePush":  2006,
		"OnUpRoomOwnerPush":  2007,
		"OnUpRoomNumberPush": 2008,
		"OnSetBankerPush":    2100,
		"OnSendCardPush":     2101,
		"OnActivePush":       2102,
	}
)

func (x GameCommand) Enum() *GameCommand {
	p := new(GameCommand)
	*p = x
	return p
}

func (x GameCommand) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameCommand) Descriptor() protoreflect.EnumDescriptor {
	return file_helloworld_v1_greeter_proto_enumTypes[0].Descriptor()
}

func (GameCommand) Type() protoreflect.EnumType {
	return &file_helloworld_v1_greeter_proto_enumTypes[0]
}

func (x GameCommand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameCommand.Descriptor instead.
func (GameCommand) EnumDescriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{0}
}

// The request message containing the user's name.
type HelloRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{1}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LoginReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`   //ID
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`      //token
	Type          int32                  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`       //0:创建，1：加入 2:快速加入
	TableID       int32                  `protobuf:"varint,4,opt,name=tableID,proto3" json:"tableID,omitempty"` //桌子号
	ChairID       int32                  `protobuf:"varint,5,opt,name=chairID,proto3" json:"chairID,omitempty"` //椅子号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{2}
}

func (x *LoginReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LoginReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *LoginReq) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *LoginReq) GetChairID() int32 {
	if x != nil {
		return x.ChairID
	}
	return 0
}

type LoginRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`     //错误码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`        //错误信息
	UserID        int64                  `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"` //ID
	TableID       int32                  `protobuf:"varint,4,opt,name=tableID,proto3" json:"tableID,omitempty"`
	ChairID       int32                  `protobuf:"varint,5,opt,name=chairID,proto3" json:"chairID,omitempty"`
	ArenaID       int32                  `protobuf:"varint,6,opt,name=arenaID,proto3" json:"arenaID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRsp) Reset() {
	*x = LoginRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRsp) ProtoMessage() {}

func (x *LoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRsp.ProtoReflect.Descriptor instead.
func (*LoginRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{3}
}

func (x *LoginRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoginRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LoginRsp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LoginRsp) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *LoginRsp) GetChairID() int32 {
	if x != nil {
		return x.ChairID
	}
	return 0
}

func (x *LoginRsp) GetArenaID() int32 {
	if x != nil {
		return x.ArenaID
	}
	return 0
}

type LogoutReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserDBID      int64                  `protobuf:"varint,1,opt,name=userDBID,proto3" json:"userDBID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutReq) Reset() {
	*x = LogoutReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutReq) ProtoMessage() {}

func (x *LogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutReq.ProtoReflect.Descriptor instead.
func (*LogoutReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{4}
}

func (x *LogoutReq) GetUserDBID() int64 {
	if x != nil {
		return x.UserDBID
	}
	return 0
}

type LogoutRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` //错误码 0:成功
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    //错误信息 主动/踢人
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutRsp) Reset() {
	*x = LogoutRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRsp) ProtoMessage() {}

func (x *LogoutRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRsp.ProtoReflect.Descriptor instead.
func (*LogoutRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{5}
}

func (x *LogoutRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LogoutRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 准备
type ReadyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	IsReady       bool                   `protobuf:"varint,2,opt,name=isReady,proto3" json:"isReady,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadyReq) Reset() {
	*x = ReadyReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyReq) ProtoMessage() {}

func (x *ReadyReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyReq.ProtoReflect.Descriptor instead.
func (*ReadyReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{6}
}

func (x *ReadyReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ReadyReq) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

type ReadyRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	IsReady       bool                   `protobuf:"varint,2,opt,name=isReady,proto3" json:"isReady,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadyRsp) Reset() {
	*x = ReadyRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyRsp) ProtoMessage() {}

func (x *ReadyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyRsp.ProtoReflect.Descriptor instead.
func (*ReadyRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{7}
}

func (x *ReadyRsp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ReadyRsp) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

type SwitchChairReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ChairId       int32                  `protobuf:"varint,2,opt,name=chairId,proto3" json:"chairId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchChairReq) Reset() {
	*x = SwitchChairReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchChairReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchChairReq) ProtoMessage() {}

func (x *SwitchChairReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchChairReq.ProtoReflect.Descriptor instead.
func (*SwitchChairReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{8}
}

func (x *SwitchChairReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SwitchChairReq) GetChairId() int32 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

type SwitchChairRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	UserID        int64                  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	ChairId       int32                  `protobuf:"varint,3,opt,name=chairId,proto3" json:"chairId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchChairRsp) Reset() {
	*x = SwitchChairRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchChairRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchChairRsp) ProtoMessage() {}

func (x *SwitchChairRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchChairRsp.ProtoReflect.Descriptor instead.
func (*SwitchChairRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{9}
}

func (x *SwitchChairRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SwitchChairRsp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SwitchChairRsp) GetChairId() int32 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

type SceneReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SceneReq) Reset() {
	*x = SceneReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SceneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneReq) ProtoMessage() {}

func (x *SceneReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneReq.ProtoReflect.Descriptor instead.
func (*SceneReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{10}
}

func (x *SceneReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type SceneRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stage         int32                  `protobuf:"varint,1,opt,name=stage,proto3" json:"stage,omitempty"`                 //牌局状态
	ActiveChairId int32                  `protobuf:"varint,2,opt,name=activeChairId,proto3" json:"activeChairId,omitempty"` //当前操作位置
	LeftNum       int32                  `protobuf:"varint,4,opt,name=leftNum,proto3" json:"leftNum,omitempty"`             //剩余牌
	TimeOut       int32                  `protobuf:"varint,5,opt,name=timeOut,proto3" json:"timeOut,omitempty"`             //剩余时间
	BankerId      int32                  `protobuf:"varint,6,opt,name=bankerId,proto3" json:"bankerId,omitempty"`           //庄家位置
	Players       []*PlayerScene         `protobuf:"bytes,7,rep,name=players,proto3" json:"players,omitempty"`              //玩家信息
	ArenaID       int32                  `protobuf:"varint,9,opt,name=arenaID,proto3" json:"arenaID,omitempty"`             //场id
	SN            int32                  `protobuf:"varint,10,opt,name=SN,proto3" json:"SN,omitempty"`                      //房间号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SceneRsp) Reset() {
	*x = SceneRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SceneRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneRsp) ProtoMessage() {}

func (x *SceneRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneRsp.ProtoReflect.Descriptor instead.
func (*SceneRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{11}
}

func (x *SceneRsp) GetStage() int32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *SceneRsp) GetActiveChairId() int32 {
	if x != nil {
		return x.ActiveChairId
	}
	return 0
}

func (x *SceneRsp) GetLeftNum() int32 {
	if x != nil {
		return x.LeftNum
	}
	return 0
}

func (x *SceneRsp) GetTimeOut() int32 {
	if x != nil {
		return x.TimeOut
	}
	return 0
}

func (x *SceneRsp) GetBankerId() int32 {
	if x != nil {
		return x.BankerId
	}
	return 0
}

func (x *SceneRsp) GetPlayers() []*PlayerScene {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *SceneRsp) GetArenaID() int32 {
	if x != nil {
		return x.ArenaID
	}
	return 0
}

func (x *SceneRsp) GetSN() int32 {
	if x != nil {
		return x.SN
	}
	return 0
}

type PlayerScene struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`            //玩家ID
	ChairId       int32                  `protobuf:"varint,2,opt,name=chairId,proto3" json:"chairId,omitempty"`          //玩家座位号
	Hands         []int32                `protobuf:"varint,3,rep,packed,name=hands,proto3" json:"hands,omitempty"`       //手牌
	OutCards      []int32                `protobuf:"varint,4,rep,packed,name=outCards,proto3" json:"outCards,omitempty"` //出牌
	IsHosting     bool                   `protobuf:"varint,6,opt,name=isHosting,proto3" json:"isHosting,omitempty"`      //是否托管
	IsOffline     bool                   `protobuf:"varint,7,opt,name=isOffline,proto3" json:"isOffline,omitempty"`      //是否断线
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerScene) Reset() {
	*x = PlayerScene{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerScene) ProtoMessage() {}

func (x *PlayerScene) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerScene.ProtoReflect.Descriptor instead.
func (*PlayerScene) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{12}
}

func (x *PlayerScene) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PlayerScene) GetChairId() int32 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

func (x *PlayerScene) GetHands() []int32 {
	if x != nil {
		return x.Hands
	}
	return nil
}

func (x *PlayerScene) GetOutCards() []int32 {
	if x != nil {
		return x.OutCards
	}
	return nil
}

func (x *PlayerScene) GetIsHosting() bool {
	if x != nil {
		return x.IsHosting
	}
	return false
}

func (x *PlayerScene) GetIsOffline() bool {
	if x != nil {
		return x.IsOffline
	}
	return false
}

type ChatReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int32                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"` //玩家ID
	OpType        int32                  `protobuf:"varint,2,opt,name=opType,proto3" json:"opType,omitempty"` //0表情 1快捷文字 2自定义文字
	FaceID        int32                  `protobuf:"varint,3,opt,name=faceID,proto3" json:"faceID,omitempty"` //表情or聊天ID
	Msg           string                 `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`        //聊天信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatReq) Reset() {
	*x = ChatReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatReq) ProtoMessage() {}

func (x *ChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatReq.ProtoReflect.Descriptor instead.
func (*ChatReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{13}
}

func (x *ChatReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ChatReq) GetOpType() int32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *ChatReq) GetFaceID() int32 {
	if x != nil {
		return x.FaceID
	}
	return 0
}

func (x *ChatReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 服务器广播表情
type ChatRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int32                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"` //玩家ID
	OpType        int32                  `protobuf:"varint,2,opt,name=opType,proto3" json:"opType,omitempty"` //0表情 1快捷文字 2自定义文字
	FaceID        int32                  `protobuf:"varint,3,opt,name=faceID,proto3" json:"faceID,omitempty"` //表情or聊天ID
	Msg           string                 `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`        //聊天信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatRsp) Reset() {
	*x = ChatRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRsp) ProtoMessage() {}

func (x *ChatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRsp.ProtoReflect.Descriptor instead.
func (*ChatRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{14}
}

func (x *ChatRsp) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ChatRsp) GetOpType() int32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *ChatRsp) GetFaceID() int32 {
	if x != nil {
		return x.FaceID
	}
	return 0
}

func (x *ChatRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type HostingReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsHosting     bool                   `protobuf:"varint,1,opt,name=isHosting,proto3" json:"isHosting,omitempty"` // true 托管； false 取消托管
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostingReq) Reset() {
	*x = HostingReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostingReq) ProtoMessage() {}

func (x *HostingReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostingReq.ProtoReflect.Descriptor instead.
func (*HostingReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{15}
}

func (x *HostingReq) GetIsHosting() bool {
	if x != nil {
		return x.IsHosting
	}
	return false
}

type HostingRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChairId       int32                  `protobuf:"varint,1,opt,name=chairId,proto3" json:"chairId,omitempty"`     //座位号
	Status        int32                  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`       //1:正常  2:托管
	AiNum         int32                  `protobuf:"varint,3,opt,name=aiNum,proto3" json:"aiNum,omitempty"`         //玩家（非断线）超时引起的当前局的托管次数
	PlayTimes     int32                  `protobuf:"varint,4,opt,name=playTimes,proto3" json:"playTimes,omitempty"` //操作时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostingRsp) Reset() {
	*x = HostingRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostingRsp) ProtoMessage() {}

func (x *HostingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostingRsp.ProtoReflect.Descriptor instead.
func (*HostingRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{16}
}

func (x *HostingRsp) GetChairId() int32 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

func (x *HostingRsp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *HostingRsp) GetAiNum() int32 {
	if x != nil {
		return x.AiNum
	}
	return 0
}

func (x *HostingRsp) GetPlayTimes() int32 {
	if x != nil {
		return x.PlayTimes
	}
	return 0
}

type ForwardReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForwardReq) Reset() {
	*x = ForwardReq{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForwardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardReq) ProtoMessage() {}

func (x *ForwardReq) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardReq.ProtoReflect.Descriptor instead.
func (*ForwardReq) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{17}
}

func (x *ForwardReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ForwardReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ForwardRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForwardRsp) Reset() {
	*x = ForwardRsp{}
	mi := &file_helloworld_v1_greeter_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForwardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardRsp) ProtoMessage() {}

func (x *ForwardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_v1_greeter_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardRsp.ProtoReflect.Descriptor instead.
func (*ForwardRsp) Descriptor() ([]byte, []int) {
	return file_helloworld_v1_greeter_proto_rawDescGZIP(), []int{18}
}

func (x *ForwardRsp) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ForwardRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_helloworld_v1_greeter_proto protoreflect.FileDescriptor

const file_helloworld_v1_greeter_proto_rawDesc = "" +
	"\n" +
	"\x1bhelloworld/v1/greeter.proto\x12\rhelloworld.v1\x1a\x1cgoogle/api/annotations.proto\"\"\n" +
	"\fHelloRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"&\n" +
	"\n" +
	"HelloReply\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x80\x01\n" +
	"\bLoginReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12\x12\n" +
	"\x04type\x18\x03 \x01(\x05R\x04type\x12\x18\n" +
	"\atableID\x18\x04 \x01(\x05R\atableID\x12\x18\n" +
	"\achairID\x18\x05 \x01(\x05R\achairID\"\x96\x01\n" +
	"\bLoginRsp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x16\n" +
	"\x06userID\x18\x03 \x01(\x03R\x06userID\x12\x18\n" +
	"\atableID\x18\x04 \x01(\x05R\atableID\x12\x18\n" +
	"\achairID\x18\x05 \x01(\x05R\achairID\x12\x18\n" +
	"\aarenaID\x18\x06 \x01(\x05R\aarenaID\"'\n" +
	"\tLogoutReq\x12\x1a\n" +
	"\buserDBID\x18\x01 \x01(\x03R\buserDBID\"1\n" +
	"\tLogoutRsp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\"<\n" +
	"\bReadyReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x18\n" +
	"\aisReady\x18\x02 \x01(\bR\aisReady\"<\n" +
	"\bReadyRsp\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x18\n" +
	"\aisReady\x18\x02 \x01(\bR\aisReady\"B\n" +
	"\x0eSwitchChairReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x18\n" +
	"\achairId\x18\x02 \x01(\x05R\achairId\"V\n" +
	"\x0eSwitchChairRsp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x16\n" +
	"\x06userID\x18\x02 \x01(\x03R\x06userID\x12\x18\n" +
	"\achairId\x18\x03 \x01(\x05R\achairId\"\"\n" +
	"\bSceneReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\"\xf6\x01\n" +
	"\bSceneRsp\x12\x14\n" +
	"\x05stage\x18\x01 \x01(\x05R\x05stage\x12$\n" +
	"\ractiveChairId\x18\x02 \x01(\x05R\ractiveChairId\x12\x18\n" +
	"\aleftNum\x18\x04 \x01(\x05R\aleftNum\x12\x18\n" +
	"\atimeOut\x18\x05 \x01(\x05R\atimeOut\x12\x1a\n" +
	"\bbankerId\x18\x06 \x01(\x05R\bbankerId\x124\n" +
	"\aplayers\x18\a \x03(\v2\x1a.helloworld.v1.PlayerSceneR\aplayers\x12\x18\n" +
	"\aarenaID\x18\t \x01(\x05R\aarenaID\x12\x0e\n" +
	"\x02SN\x18\n" +
	" \x01(\x05R\x02SN\"\xad\x01\n" +
	"\vPlayerScene\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x18\n" +
	"\achairId\x18\x02 \x01(\x05R\achairId\x12\x14\n" +
	"\x05hands\x18\x03 \x03(\x05R\x05hands\x12\x1a\n" +
	"\boutCards\x18\x04 \x03(\x05R\boutCards\x12\x1c\n" +
	"\tisHosting\x18\x06 \x01(\bR\tisHosting\x12\x1c\n" +
	"\tisOffline\x18\a \x01(\bR\tisOffline\"c\n" +
	"\aChatReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x05R\x06userID\x12\x16\n" +
	"\x06opType\x18\x02 \x01(\x05R\x06opType\x12\x16\n" +
	"\x06faceID\x18\x03 \x01(\x05R\x06faceID\x12\x10\n" +
	"\x03msg\x18\x04 \x01(\tR\x03msg\"c\n" +
	"\aChatRsp\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x05R\x06userID\x12\x16\n" +
	"\x06opType\x18\x02 \x01(\x05R\x06opType\x12\x16\n" +
	"\x06faceID\x18\x03 \x01(\x05R\x06faceID\x12\x10\n" +
	"\x03msg\x18\x04 \x01(\tR\x03msg\"*\n" +
	"\n" +
	"HostingReq\x12\x1c\n" +
	"\tisHosting\x18\x01 \x01(\bR\tisHosting\"r\n" +
	"\n" +
	"HostingRsp\x12\x18\n" +
	"\achairId\x18\x01 \x01(\x05R\achairId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\x05R\x06status\x12\x14\n" +
	"\x05aiNum\x18\x03 \x01(\x05R\x05aiNum\x12\x1c\n" +
	"\tplayTimes\x18\x04 \x01(\x05R\tplayTimes\"2\n" +
	"\n" +
	"ForwardReq\x12\x12\n" +
	"\x04Type\x18\x01 \x01(\x05R\x04Type\x12\x10\n" +
	"\x03Msg\x18\x02 \x01(\tR\x03Msg\"2\n" +
	"\n" +
	"ForwardRsp\x12\x12\n" +
	"\x04Type\x18\x01 \x01(\x05R\x04Type\x12\x10\n" +
	"\x03Msg\x18\x02 \x01(\tR\x03Msg*\xd1\x04\n" +
	"\vGameCommand\x12\v\n" +
	"\aNothing\x10\x00\x12\x0f\n" +
	"\vSayHelloReq\x10\x01\x12\x0f\n" +
	"\vSayHelloRsp\x10\x02\x12\x0f\n" +
	"\n" +
	"OnLoginReq\x10\xe9\a\x12\x0f\n" +
	"\n" +
	"OnLoginRsp\x10\xea\a\x12\x10\n" +
	"\vOnLogoutReq\x10\xeb\a\x12\x10\n" +
	"\vOnLogoutRsp\x10\xec\a\x12\x0f\n" +
	"\n" +
	"OnReadyReq\x10\xed\a\x12\x0f\n" +
	"\n" +
	"OnReadyRsp\x10\xee\a\x12\x15\n" +
	"\x10OnSwitchChairReq\x10\xef\a\x12\x15\n" +
	"\x10OnSwitchChairRsp\x10\xf0\a\x12\x0f\n" +
	"\n" +
	"OnSceneReq\x10\xf1\a\x12\x0f\n" +
	"\n" +
	"OnSceneRsp\x10\xf2\a\x12\x0e\n" +
	"\tOnChatReq\x10\xf3\a\x12\x0e\n" +
	"\tOnChatRsp\x10\xf4\a\x12\x11\n" +
	"\fOnHostingReq\x10\xf5\a\x12\x11\n" +
	"\fOnHostingRsp\x10\xf6\a\x12\x11\n" +
	"\fOnForwardReq\x10\xf7\a\x12\x11\n" +
	"\fOnForwardRsp\x10\xf8\a\x12\x11\n" +
	"\fOnConfigPush\x10\xd1\x0f\x12\x11\n" +
	"\fOnResultPush\x10\xd2\x0f\x12\x13\n" +
	"\x0eOnUserInfoPush\x10\xd3\x0f\x12\x16\n" +
	"\x11OnEmojiConfigPush\x10\xd4\x0f\x12\x15\n" +
	"\x10OnPlayerQuitPush\x10\xd5\x0f\x12\x16\n" +
	"\x11OnUserOfflinePush\x10\xd6\x0f\x12\x16\n" +
	"\x11OnUpRoomOwnerPush\x10\xd7\x0f\x12\x17\n" +
	"\x12OnUpRoomNumberPush\x10\xd8\x0f\x12\x14\n" +
	"\x0fOnSetBankerPush\x10\xb4\x10\x12\x13\n" +
	"\x0eOnSendCardPush\x10\xb5\x10\x12\x11\n" +
	"\fOnActivePush\x10\xb6\x102\x9a\a\n" +
	"\aGreeter\x12a\n" +
	"\vSayHelloReq\x12\x1b.helloworld.v1.HelloRequest\x1a\x19.helloworld.v1.HelloReply\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/helloworld/{name}\x12^\n" +
	"\n" +
	"OnLoginReq\x12\x17.helloworld.v1.LoginReq\x1a\x17.helloworld.v1.LoginRsp\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/greeter/OnLoginReq\x12b\n" +
	"\vOnLogoutReq\x12\x18.helloworld.v1.LogoutReq\x1a\x18.helloworld.v1.LogoutRsp\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/greeter/OnLogoutReq\x12^\n" +
	"\n" +
	"OnReadyReq\x12\x17.helloworld.v1.ReadyReq\x1a\x17.helloworld.v1.ReadyRsp\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/greeter/OnReadyReq\x12v\n" +
	"\x10OnSwitchChairReq\x12\x1d.helloworld.v1.SwitchChairReq\x1a\x1d.helloworld.v1.SwitchChairRsp\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/greeter/OnSwitchChairReq\x12^\n" +
	"\n" +
	"OnSceneReq\x12\x17.helloworld.v1.SceneReq\x1a\x17.helloworld.v1.SceneRsp\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/greeter/OnSceneReq\x12`\n" +
	"\tOnChatReq\x12\x16.helloworld.v1.ChatReq\x1a\x16.helloworld.v1.ChatRsp\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/greeter/OnChatOrFaceReq\x12f\n" +
	"\fOnHostingReq\x12\x19.helloworld.v1.HostingReq\x1a\x19.helloworld.v1.HostingRsp\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/greeter/OnHostingReq\x12f\n" +
	"\fOnForwardReq\x12\x19.helloworld.v1.ForwardReq\x1a\x19.helloworld.v1.ForwardRsp\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/greeter/OnForwardReqBT\n" +
	"\x1cdev.kratos.api.helloworld.v1B\x11HelloworldProtoV1P\x01Z\x1fapi-server/api/helloworld/v1;v1b\x06proto3"

var (
	file_helloworld_v1_greeter_proto_rawDescOnce sync.Once
	file_helloworld_v1_greeter_proto_rawDescData []byte
)

func file_helloworld_v1_greeter_proto_rawDescGZIP() []byte {
	file_helloworld_v1_greeter_proto_rawDescOnce.Do(func() {
		file_helloworld_v1_greeter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_helloworld_v1_greeter_proto_rawDesc), len(file_helloworld_v1_greeter_proto_rawDesc)))
	})
	return file_helloworld_v1_greeter_proto_rawDescData
}

var file_helloworld_v1_greeter_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_helloworld_v1_greeter_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_helloworld_v1_greeter_proto_goTypes = []any{
	(GameCommand)(0),       // 0: helloworld.v1.GameCommand
	(*HelloRequest)(nil),   // 1: helloworld.v1.HelloRequest
	(*HelloReply)(nil),     // 2: helloworld.v1.HelloReply
	(*LoginReq)(nil),       // 3: helloworld.v1.LoginReq
	(*LoginRsp)(nil),       // 4: helloworld.v1.LoginRsp
	(*LogoutReq)(nil),      // 5: helloworld.v1.LogoutReq
	(*LogoutRsp)(nil),      // 6: helloworld.v1.LogoutRsp
	(*ReadyReq)(nil),       // 7: helloworld.v1.ReadyReq
	(*ReadyRsp)(nil),       // 8: helloworld.v1.ReadyRsp
	(*SwitchChairReq)(nil), // 9: helloworld.v1.SwitchChairReq
	(*SwitchChairRsp)(nil), // 10: helloworld.v1.SwitchChairRsp
	(*SceneReq)(nil),       // 11: helloworld.v1.SceneReq
	(*SceneRsp)(nil),       // 12: helloworld.v1.SceneRsp
	(*PlayerScene)(nil),    // 13: helloworld.v1.PlayerScene
	(*ChatReq)(nil),        // 14: helloworld.v1.ChatReq
	(*ChatRsp)(nil),        // 15: helloworld.v1.ChatRsp
	(*HostingReq)(nil),     // 16: helloworld.v1.HostingReq
	(*HostingRsp)(nil),     // 17: helloworld.v1.HostingRsp
	(*ForwardReq)(nil),     // 18: helloworld.v1.ForwardReq
	(*ForwardRsp)(nil),     // 19: helloworld.v1.ForwardRsp
}
var file_helloworld_v1_greeter_proto_depIdxs = []int32{
	13, // 0: helloworld.v1.SceneRsp.players:type_name -> helloworld.v1.PlayerScene
	1,  // 1: helloworld.v1.Greeter.SayHelloReq:input_type -> helloworld.v1.HelloRequest
	3,  // 2: helloworld.v1.Greeter.OnLoginReq:input_type -> helloworld.v1.LoginReq
	5,  // 3: helloworld.v1.Greeter.OnLogoutReq:input_type -> helloworld.v1.LogoutReq
	7,  // 4: helloworld.v1.Greeter.OnReadyReq:input_type -> helloworld.v1.ReadyReq
	9,  // 5: helloworld.v1.Greeter.OnSwitchChairReq:input_type -> helloworld.v1.SwitchChairReq
	11, // 6: helloworld.v1.Greeter.OnSceneReq:input_type -> helloworld.v1.SceneReq
	14, // 7: helloworld.v1.Greeter.OnChatReq:input_type -> helloworld.v1.ChatReq
	16, // 8: helloworld.v1.Greeter.OnHostingReq:input_type -> helloworld.v1.HostingReq
	18, // 9: helloworld.v1.Greeter.OnForwardReq:input_type -> helloworld.v1.ForwardReq
	2,  // 10: helloworld.v1.Greeter.SayHelloReq:output_type -> helloworld.v1.HelloReply
	4,  // 11: helloworld.v1.Greeter.OnLoginReq:output_type -> helloworld.v1.LoginRsp
	6,  // 12: helloworld.v1.Greeter.OnLogoutReq:output_type -> helloworld.v1.LogoutRsp
	8,  // 13: helloworld.v1.Greeter.OnReadyReq:output_type -> helloworld.v1.ReadyRsp
	10, // 14: helloworld.v1.Greeter.OnSwitchChairReq:output_type -> helloworld.v1.SwitchChairRsp
	12, // 15: helloworld.v1.Greeter.OnSceneReq:output_type -> helloworld.v1.SceneRsp
	15, // 16: helloworld.v1.Greeter.OnChatReq:output_type -> helloworld.v1.ChatRsp
	17, // 17: helloworld.v1.Greeter.OnHostingReq:output_type -> helloworld.v1.HostingRsp
	19, // 18: helloworld.v1.Greeter.OnForwardReq:output_type -> helloworld.v1.ForwardRsp
	10, // [10:19] is the sub-list for method output_type
	1,  // [1:10] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_helloworld_v1_greeter_proto_init() }
func file_helloworld_v1_greeter_proto_init() {
	if File_helloworld_v1_greeter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_helloworld_v1_greeter_proto_rawDesc), len(file_helloworld_v1_greeter_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_helloworld_v1_greeter_proto_goTypes,
		DependencyIndexes: file_helloworld_v1_greeter_proto_depIdxs,
		EnumInfos:         file_helloworld_v1_greeter_proto_enumTypes,
		MessageInfos:      file_helloworld_v1_greeter_proto_msgTypes,
	}.Build()
	File_helloworld_v1_greeter_proto = out.File
	file_helloworld_v1_greeter_proto_goTypes = nil
	file_helloworld_v1_greeter_proto_depIdxs = nil
}
